# CMSIS Build CMakeLists generated on 2022-08-23T15:48:24

cmake_minimum_required(VERSION 3.18)

# Target options

set(TARGET Project)
set(CPU Cortex-M0)
set(PRJ_DIR "C:/sandbox/build/tools/buildmgr/test/integrationtests/testdata/Examples/GCC/DupFilename")
set(OUT_DIR "C:/sandbox/build/tools/buildmgr/test/integrationtests/testdata/Examples/GCC/DupFilename/OutDir")
set(INT_DIR "C:/sandbox/build/tools/buildmgr/test/integrationtests/testdata/Examples/GCC/DupFilename/IntDir")
set(FPU NO_FPU)
set(SECURE Non-secure)
set(CC_FLAGS_GLOBAL "-O -Wall -gdwarf-2 -mapcs-frame -mthumb")
set(LD_FLAGS_GLOBAL "--specs=nosys.specs -mcpu=cortex-m3 -mthumb")
set(OUT_NAME Project)
set(HEX_FILE "${OUT_NAME}.hex")
set(BIN_FILE "${OUT_NAME}.bin")

set(DEFINES
  ARMCM0
  _RTE_
)

set(INC_PATHS
  "C:/sandbox/build/tools/buildmgr/test/integrationtests/testdata/Examples/GCC/DupFilename/RTE/_Project"
  "C:/sandbox/build/tools/buildmgr/test/integrationtests/testdata/Packs/ARM/RteTest_DFP/0.2.0/Device/ARM/ARMCM0/Include"
)

set(CC_SRC_FILES
  "C:/sandbox/build/tools/buildmgr/test/integrationtests/testdata/Examples/GCC/DupFilename/main.c"
  "C:/sandbox/build/tools/buildmgr/test/integrationtests/testdata/Packs/ARM/RteTest/0.1.0/Dummy/Subfolder/dummy.c"
  "C:/sandbox/build/tools/buildmgr/test/integrationtests/testdata/Packs/ARM/RteTest/0.1.0/Dummy/dummy.c"
)

# Toolchain config map

include ("C:/sandbox/build/tools/buildmgr/test/integrationtests/testoutput/cbuild/etc/GCC.11.2.1.cmake")

# Setup project

project(${TARGET} LANGUAGES C)

# Global Flags

set(CMAKE_C_FLAGS "${CC_CPU} ${CC_DEFINES} ${CC_SECURE} ${CC_FLAGS} ${CC_FLAGS_GLOBAL} ${CC_SYS_INC_PATHS}")
set(CMAKE_C_LINK_FLAGS "${LD_CPU} ${LD_SECURE} ${LD_FLAGS_GLOBAL} ${LD_FLAGS}")

# Compilation Database

set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
add_custom_target(database COMMAND ${CMAKE_COMMAND} -E copy_if_different "${INT_DIR}/compile_commands.json" "${OUT_DIR}")

# Setup Target

add_executable(${TARGET} ${CC_SRC_FILES})
set_target_properties(${TARGET} PROPERTIES PREFIX "" SUFFIX "${EXE_SUFFIX}" OUTPUT_NAME "${TARGET}")
set_target_properties(${TARGET} PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${OUT_DIR})
target_include_directories(${TARGET} PUBLIC ${INC_PATHS})

# Bin and Hex Conversion

add_custom_command(TARGET ${TARGET} POST_BUILD COMMAND ${CMAKE_OBJCOPY} ${ELF2HEX})
add_custom_command(TARGET ${TARGET} POST_BUILD COMMAND ${CMAKE_OBJCOPY} ${ELF2BIN})
