# yaml-language-server: $schema=https://raw.githubusercontent.com/Open-CMSIS-Pack/devtools/main/tools/packgen/schema/manifest.schema.json

build:
  - name: "build1"
    options: "cmake -G Ninja"

packs:
  - name: "TestPack"
    description: "TestPack description"
    vendor: "ARM"
    license: "LICENSE"
    url: "http://arm.com/"

    requirements:
      packages:
        - attributes: {vendor: "ARM", name: "ExternalPack", version: "5.5.5"}

    releases:
      - version: "1.0.0"
        date: "2021-08-09"
        description: "Initial release"

    apis:
      - name: api1
        attributes: {Cclass: "Cclass1", Cgroup: "Group1", Capiversion: "1.0.0"}
        description: "Api1"
        files:
          - name: "lib1/api/interface.h"
            attributes: {category: header, attr: config, version: "1.0.0"}

    taxonomy:
      - attributes: {Cclass: "Class1"}
        description: "Class1 taxonomy"
      - attributes: {Cclass: "Class2"}
        description: "Class2 taxonomy"
      - attributes: {Cclass: "Class3"}
        description: "Class3 taxonomy"

    components:
      # this component is based only on CMake target lib1
      - name: component1
        target: lib1
        attributes: {Cclass: "Class1", Cgroup: "Group1", Csub: "Subgroup1", Cversion: "1.1.1"}
        description: "Component1"

      # this component is based on CMake target lib2, which depends on CMake targets lib3 and lib4 (see CMakeLists)
      # it also depends explicitly on component3, so it has to filter out build info and to generate condition accordingly
      - name: component2
        target: lib2
        attributes: {Cclass: "Class2", Cgroup: "Group2", Csub: "Subgroup2", Cversion: "2.2.2"}
        description: "Component2"
        dependencies: component3
        conditions:
          - require: {Cclass: "External Class 1", Cgroup: "External Group 1", Csub: "External Sub 1"}
        files:
          - name: "lib1/config/config.h"
            attributes: {category: header, attr: config, version: "1.0.0"}
            conditions:
              - require: {Cclass: "External Class 2", Cgroup: "External Group 2", Csub: "External Sub 2"}

      # this component merges lib4 and lib5 even if there is no CMake dependency between them
      - name: component3
        target: [lib4, lib5]
        attributes: {Cclass: "Class3", Cgroup: "Group3", Csub: "Subgroup3", Cversion: "3.3.3"}
        description: "Component3"
