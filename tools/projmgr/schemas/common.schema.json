{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://raw.githubusercontent.com/Open-CMSIS-Pack/devtools/schemas/projmgr/2.12.0/tools/projmgr/schemas/common.schema.json",
  "title": "CMSIS common",
  "description": "Common and reusable properties for other schemas.",
  "version": "2.12.0",
  "definitions": {
    "ArrayOfStrings": {
      "type": "array",
      "uniqueItems": true,
      "minItems": 1,
      "items": { "type": "string" }
    },
    "BuildContext": {
      "type": "string",
      "pattern": "^(((^[.][a-zA-Z0-9_-]{1,32})|(^[+][a-zA-Z0-9_-]{1,32}))|((^[.][a-zA-Z0-9_-]{1,32})[+][a-zA-Z0-9_-]{1,32}|(^[+][a-zA-Z0-9_-]{1,32})[.][a-zA-Z0-9_-]{1,32})|((\\^|\\\\(\\.|\\+)).*))$"
    },
    "BuildContextWithProjectName": {
      "type": "string",
      "pattern": "^([^\\.\\+]+|[^\\.\\+]*\\.[a-zA-Z0-9_-]{1,32}(\\+[a-zA-Z0-9_-]{1,32})|[^\\.\\+]*\\+[a-zA-Z0-9_-]{1,32}(\\.[a-zA-Z0-9_-]{1,32})?)$"
    },
    "BooksType": {
      "type": "array",
      "uniqueItems": true,
      "minItems": 1,
      "items": { "$ref": "#/definitions/BookType" }
    },
    "BookType": {
      "type": "object",
      "properties": {
        "name":     { "type": "string" },
        "title":    { "type": "string" },
        "category": { "type": "string" }
      },
      "additionalProperties": false
    },
    "DebugConfigsType": {
      "type": "array",
      "uniqueItems": true,
      "minItems": 1,
      "items": { "$ref": "#/definitions/DebugConfigType" }
    },
    "DebugConfigType": {
      "type": "object",
      "properties": {
        "file": {
          "title": "file:",
          "type": "string",
          "description": "File name along with the path."
        },
        "base": {
          "title": "base:",
          "type": "string",
          "description": "Current configuration file with version."
        },
        "status": {
          "title": "status:",
          "$ref": "#/definitions/PLMStatusType"
        },
        "version": {
          "title": "version:",
          "$ref": "#/definitions/VersionType"
        },
        "update": {
          "title": "update:",
          "type": "string",
          "description": "New configuration file used for merge utility."
        }
      },
      "required": [ "file" ],
      "additionalProperties": false
    },
    "ArrayOfContextMapAlternativeContext": {
      "type": "array",
      "uniqueItems": true,
      "minItems": 1,
      "items": { "$ref": "#/definitions/ContextMapAlternativeContext" }
    },
    "ContextMapAlternativeContext": {
      "type": "string",
      "pattern": "^[^\\.\\+]*(\\.[a-zA-Z0-9_-]{1,32}|\\+[a-zA-Z0-9_-]{1,32}|\\.[a-zA-Z0-9_-]{1,32}\\+[a-zA-Z0-9_-]{1,32})$"
    },
    "ArrayOfBuildContext": {
      "type": "array",
      "uniqueItems": true,
      "minItems": 1,
      "items": { "$ref": "#/definitions/BuildContext" }
    },
    "BuildSetContextsType": {
      "type": "array",
      "uniqueItems": true,
      "minItems": 1,
      "items": { "$ref": "#/definitions/BuildSetContextType" }
    },
    "BuildSetContextType": {
      "type": "object",
      "properties": {
        "context": { "$ref": "#/definitions/BuildContextWithProjectName" }
      },
      "required": [ "context" ],
      "additionalProperties": false
    },
    "ConditionIDType": {
      "type": "string"
    },
    "ForType": {
      "oneOf": [
        {"$ref": "#/definitions/ArrayOfBuildContext" },
        {"$ref": "#/definitions/BuildContext" }
      ],
      "description": "Include node for a list of [.<build-type>][+<target-type>]."
    },
    "NotForType": {
      "oneOf": [
        {"$ref": "#/definitions/ArrayOfBuildContext" },
        {"$ref": "#/definitions/BuildContext" }
      ],
      "description": "Exclude node for a list of [.<build-type>][+<target-type>]."
    },
    "TypeListMutualExclusion": {
      "oneOf": [
        { 
          "required": ["for-context"],
          "not": {"required": ["not-for-context"]}
        },
        { 
          "required": ["not-for-context"],
          "not": {"required": ["for-context"]}
        },
        {
          "allOf": [
            { "not": {"required": ["for-context"] }},
            { "not": {"required": ["not-for-context"]}}
          ]
        }
      ]
    },
    "ForContext": {
      "title": "for-context:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#for-context",
      "oneOf": [
        {"$ref": "#/definitions/ArrayOfBuildContext" },
        {"$ref": "#/definitions/BuildContext" }
      ],
      "description": "Apply to a specific context or a context list\nFormat: [.<build-type>][+<target-type>]."
    },
    "NotForContext": {
      "title": "not-for-context:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#not-for-context",
      "oneOf": [
        {"$ref": "#/definitions/ArrayOfBuildContext" },
        {"$ref": "#/definitions/BuildContext" }
      ],
      "description": "Exclude for a specific context or a context list\nFormat: [.<build-type>][+<target-type>]."

    },
    "SelectCompilersType": {
      "title": "select-compiler:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#select-compiler",
      "type": "array",
      "minItems": 1,
      "description": "List of compilers supported in the solution.",
      "items": { "$ref": "#/definitions/SelectCompilerType" }
    },
    "SelectCompilerType": {
      "type": "object",
      "properties": {
        "compiler": { "$ref": "#/definitions/CompilerType" }
      },
      "required" : [ "compiler"]
    },
    "CompilerType": {
      "title":"compiler:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#compiler",
      "type": "string",
      "pattern": "^(GCC|CLANG|AC6|IAR|CLANG_TI)(@(>=)?([0-9]+\\.[0-9]+\\.[0-9]+((\\+|\\-)[a-zA-Z0-9_\\.\\+-]+)?))?$",
      "description": "Compiler toolchain to be used, optionally with version, for example AC6@6.23.0."
    },
    "ConsumesProvidesType": {
      "oneOf": [
        {"type": "string" },
        {"type": "object", "additionalProperties": {"type": "number"}}
      ]
    },
    "VariablesType": {
      "title": "variables:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#variables",
      "type": "array",
      "uniqueItems": true,
      "minItems": 1,
      "description": "List of variables. Can be used to define project components/layers.",
      "items": {"type": "object", "additionalProperties": {"type": "string"}}
    },
    "VersionType": {
      "type": "string",
      "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+(-[0-9A-Za-z-]+(\\.[0-9A-Za-z-]+)*)?(\\+[0-9A-Za-z-]+(\\.[0-9A-Za-z-]+)*)?$",
      "description": "A version consists of 3 mandatory and 2 optional sections: MAJOR.MINOR.PATCH[-Pre Release][+Build Metadata]."
    },
    "ArrayOfCompilerType": {
      "type": "array",
      "uniqueItems": true,
      "minItems": 1,
      "items": { "$ref": "#/definitions/CompilerType" }
    },
    "CompilersType": {
      "oneOf": [
        {"$ref": "#/definitions/ArrayOfCompilerType" },
        {"$ref": "#/definitions/CompilerType" }
      ],
      "description": "Include node for a list of compilers."
    },
    "ArrayOfBuildContextWithProjectName": {
      "type": "array",
      "uniqueItems": true,
      "minItems": 1,
      "items": { "$ref": "#/definitions/BuildContextWithProjectName" }
    },
    "ContextMapType": {
      "title": "context-map:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#context-map",
      "oneOf": [
        {"$ref": "#/definitions/ArrayOfContextMapAlternativeContext" },
        {"$ref": "#/definitions/ContextMapAlternativeContext" }
      ],
      "description": "Remapping of build contexts."
    },
    "DeviceType": {
      "title": "device:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#device",
      "type": "string",
      "pattern": "^(([ -9;-~]+::)?[ -9;-~]+)?(:[ -9;-~]+)?$",
      "description": "Unique device name. Overrules default board device setting.\nA unique processor ID is required for devices with multiple processors.\nExample: STMicroelectronics::STM32H735IGK"
    },
    "ProcessorNameType": {
      "title": "device:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#device",
      "type": "string",
      "pattern": "^:[ -9;-~]+$",
      "description": "Unique processor ID.\nFormat :pname (see device name convention).\nExample: :cm0plus"
    },
    "BoardType": {
      "title": "board:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#board",
      "type": "string",
      "pattern": "^([ -9;-~]+::)?[ -9;-~]+(:[ -9;-~]+)?$",
      "description": "Unique board name optionally preceded by board vendor and followed by revision.\nFormat [vendor::]board[:revision].\nExample: NXP::LPCXpresso55S28:Rev.A"
    },
    "OptimizeType": {
      "title": "optimize:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#optimize",
      "enum": [ "size", "speed", "balanced", "none", "debug" ],
      "description": "Generic optimization levels for code generation (size, speed, balanced, none, debug)."
    },
    "LinkTimeOptimizeType": {
      "title": "link-time-optimize:",
      "type": ["null", "boolean"],
      "description": "Enable Link Time Optimization (LTO)"
    },
    "DebugType": {
      "title": "debug:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#debug",
      "enum": [ "on", "off" ],
      "description": "Enable/disable generation of debug information (on, off)."
    },
    "WarningsType": {
      "title": "warnings:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#warnings",
      "enum": [ "on", "off", "all" ],
      "description": "Control warnings (on, off, all)."
    },
    "LanguageCType": {
      "title": "language-C:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#language-c",
      "enum": [ "c90", "gnu90", "c99", "gnu99", "c11", "gnu11", "c17", "gnu17", "c23", "gnu23" ],
      "description": "Language standard to apply for compiling C source files.\nFor example c17, or gnu11."
    },
    "LanguageCppType": {
      "title": "language-CPP:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#language-cpp",
      "enum": [ "c++98", "gnu++98", "c++03", "gnu++03", "c++11", "gnu++11", "c++14", "gnu++14", "c++17", "gnu++17", "c++20", "gnu++20", "c++23", "gnu++23" ],
      "description": "Language standard to apply for compiling C++ source files.\nFor example c++17 or gnu++17."
    },
    "PLMStatusType": {
      "enum": [ "missing file", "missing base", "update suggested", "update recommended", "update required" ],
      "description": "PLM Status of component configuration file."
    },
    "ArrayOfArtifactType": {
      "type": "array",
      "uniqueItems": true,
      "minItems": 1,
      "items": { "$ref": "#/definitions/ArtifactType" }
    },
    "ArtifactType": {
      "enum": [ "elf", "hex", "bin", "lib", "cmse-lib", "map" ],
      "description": "Output type: elf (default), hex, bin, lib, cmse-lib or map."
    },
    "ArtifactsType": {
      "oneOf": [
        {"$ref": "#/definitions/ArrayOfArtifactType" },
        {"$ref": "#/definitions/ArtifactType" }
      ]
    },
    "OutputType": {
      "title": "output:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#output",
      "type": "object",
      "description": "Output file settings.",
      "minProperties": 1,
      "properties": {
        "base-name": {
          "title": "base-name:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#output",
          "type": "string",
          "description": "Base name for all output files"
        },
        "type": {
          "title": "type:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#output",
          "$ref": "#/definitions/ArtifactsType"
        }
      },
      "additionalProperties": false
    },
    "OutputDirectoriesType": {
      "title": "output-dirs:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#output-dirs",
      "type": "object",
      "description": "Directories for saving the build output and temporary files.",
      "properties": {
        "intdir": {
          "title": "intdir:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#output-dirs",
          "type": "string",
          "description": "Legacy option applied instead of tmpdir when using cbuild with --cbuildgen."
        },
        "outdir": {
          "title": "outdir:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#output-dirs",
          "type": "string",
          "description": "Directory for saving the build output files \n (.elf, .bin, .map, and others)."
        },
        "tmpdir": {
          "title": "tmpdir:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#output-dirs",
          "type": "string",
          "description": "Directory for saving the interim temporary files."
        },
        "cprjdir": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "BuildOutputDirectoriesType": {
      "type": "object",
      "properties": {
        "rtedir":   { "type": "string" },
        "intdir":   { "type": "string" },
        "outdir":   { "type": "string" },
        "cprjdir":  { "type": "string" }
      },
      "additionalProperties": false
    },
    "OutputFileType": {
      "type": "object",
      "properties": {
        "file": { "type": "string" },
        "type": { "$ref": "#/definitions/ArtifactsType" }
      },
      "additionalProperties": false,
      "required": [ "file", "type" ]
    },
    "OutputFilesType": {
      "type": "array",
      "uniqueItems": true,
      "minItems": 1,
      "items": { "$ref": "#/definitions/OutputFileType" }
    },
    "BuildDefinesType": {
      "type": "array",
      "description": "List of #define symbol settings for the code generation.",
      "uniqueItems": false,
      "minItems": 1,
      "items": {
        "oneOf": [
          {
            "type": "object",
            "patternProperties": {
              "^.*$": {
                "oneOf": [
                  {
                    "type": "string",
                    "pattern": "^([^=:]+)$",
                    "minLength": 1
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "boolean"
                  }
                ]
              }
            }
          },
          {
            "type": "string",
            "pattern": "^([^=:]+)$"
          }
        ]
      }
    },
    "DefinesType": {
      "title": "define:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#define",
      "type": "array",
      "description": "List of #define symbols for C/C++ files and linker script preprocessor.",
      "uniqueItems": true,
      "minItems": 1,
      "items": {
        "oneOf": [
          {
            "type": "object",
            "patternProperties": {
              "^.*$": {
                "oneOf": [
                  {
                    "type": "string",
                    "pattern": "^([^=:]+)$",
                    "minLength": 1
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "boolean"
                  }
                ]
              }
            }
          },
          {
            "type": "string",
            "pattern": "^([^=:]+)$"
          }
        ]
      }
    },
    "DefinesAsmType": {
      "title": "define-asm:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#define-asm",
      "type": "array",
      "description": "List of #define symbols for assembler source files.",
      "uniqueItems": true,
      "minItems": 1,
      "items": {
        "oneOf": [
          {
            "type": "object",
            "patternProperties": {
              "^.*$": {
                "oneOf": [
                  {
                    "type": "string",
                    "pattern": "^([^=:]+)$",
                    "minLength": 1
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "boolean"
                  }
                ]
              }
            }
          },
          {
            "type": "string",
            "pattern": "^([^=:]+)$"
          }
        ]
      }
    },
    "UndefinesType": {
      "title": "undefine:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#undefine",
      "type": "array",
      "description": "List of #define symbol settings to be removed for the code generation.",
      "uniqueItems": true,
      "minItems": 1,
      "items": { "type": "string" }
    },
    "AddpathsType": {
      "title": "add-path:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#add-path",
      "type": "array",
      "description": "List of additional include paths for C/C++ source files.",
      "uniqueItems": true,
      "minItems": 1,
      "items": { "type": "string" }
    },
    "AddAsmPathsType": {
      "title": "add-path-asm\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#add-path-asm",
      "type": "array",
      "description": "List of additional include paths for assembly source files.",
      "uniqueItems": true,
      "minItems": 1,
      "items": { "type": "string" }
    },
    "DelpathsType": {
      "title": "del-path:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#del-path",
      "type": "array",
      "description": "List of include paths to be removed for code generation.",
      "uniqueItems": true,
      "minItems": 1,
      "items": { "type": "string" }
    },
    "MiscTypes": {
      "title": "misc:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#misc",
      "description": "List of miscellaneous literal tool-specific controls that are passed directly to the tools depending on the file type.",
      "oneOf": [
        {
          "type": "array",
          "uniqueItems": true,
          "minItems": 1,
          "items": { "$ref": "#/definitions/MiscType" }
        },
        { "$ref": "#/definitions/MiscType" }
      ]
    },
    "MiscType": {
      "type": ["object", "null"],
      "properties": {
        "for-compiler": {
          "title": "for-compiler:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#for-compiler",
          "$ref": "#/definitions/CompilerType",
          "description": "Name of the toolchain that the literal control string applies to."
        },
        "C": {
          "title": "C:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#misc",
          "$ref": "#/definitions/ArrayOfStrings",
          "description": "Flags for *.c files."
        },
        "CPP": {
          "title": "CPP:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#misc",
          "$ref": "#/definitions/ArrayOfStrings",
          "description": "Flags for *.cpp files."
        },
        "C-CPP": {
          "title": "C-CPP:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#misc",
          "$ref": "#/definitions/ArrayOfStrings",
          "description": "Flags for *.c and *.cpp files."
        },
        "ASM": {
          "title": "ASM:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#misc",
          "$ref": "#/definitions/ArrayOfStrings",
          "description": "Flags for assembler source files."
        },
        "Link": {
          "title": "Link:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#misc",
          "$ref": "#/definitions/ArrayOfStrings",
          "description": "Linker flags."
        },
        "Link-C": {
          "title": "Link-C:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#misc",
          "$ref": "#/definitions/ArrayOfStrings",
          "description": "Linker flags for a pure C project."
        },
        "Link-CPP": {
          "title": "Link-CPP:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#misc",
          "$ref": "#/definitions/ArrayOfStrings",
          "description": "Linker flags for a project with C++ files."
        },
        "Library": {
          "title": "Library:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#misc",
          "$ref": "#/definitions/ArrayOfStrings",
          "description": "Set libraries to the correct position in the linker command line (for GCC)."
        },
        "Lib": {
          "title": "Lib:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#misc",
          "$ref": "#/definitions/ArrayOfStrings",
          "description": "List of Library Manager or Archiver flags."
        }
      },
      "additionalProperties": false
    },
    "InstancesType": {
      "title": "instances:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#instances",
      "type": "integer",
      "description": "Allows to use multiple instances of component configuration files instead of default 1."
    },
    "MaxInstancesType": {
      "title": "maxInstances:",
      "type": "integer",
      "description": "Maximum allowed instances of a component in a project. Default is 1 for one instance."
    },
    "TargetTypes": {
      "title": "target-types:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#target-types",
      "type": "array",
      "description": "List of target type names that allow to switch between different target systems.",
      "uniqueItems": true,
      "minItems": 1,
      "items": { "$ref": "#/definitions/TargetType" }
    },
    "TargetType": {
      "type": "object",
      "properties": {
        "type": {
          "title": "type:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#target-types",
          "type": "string",
          "pattern": "^([a-zA-Z0-9_-]{1,32})$",
          "description": "Name of the target type."
        },
        "add-path":     { "$ref": "#/definitions/AddpathsType" },
        "add-path-asm": { "$ref": "#/definitions/AddAsmPathsType" },
        "board":        { "$ref": "#/definitions/BoardType" },
        "compiler": {
          "title": "compiler:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#compiler",
          "$ref": "#/definitions/CompilerType"
        },
        "context-map":  { "$ref": "#/definitions/ContextMapType" },
        "debug":        { "$ref": "#/definitions/DebugType" },
        "define":       { "$ref": "#/definitions/DefinesType" },
        "define-asm":   { "$ref": "#/definitions/DefinesAsmType" },
        "del-path":     { "$ref": "#/definitions/DelpathsType" },
        "device":       { "$ref": "#/definitions/DeviceType" },
        "language-C":   { "$ref": "#/definitions/LanguageCType" },
        "language-CPP": { "$ref": "#/definitions/LanguageCppType" },
        "link-time-optimize": { "$ref": "#/definitions/LinkTimeOptimizeType" },
        "misc":         { "$ref": "#/definitions/MiscTypes" },
        "memory":       { "$ref": "#/definitions/MemoryType" },
        "optimize":     { "$ref": "#/definitions/OptimizeType" },
        "processor":    { "$ref": "#/definitions/ProcessorType" },
        "target-set":   { "$ref": "#/definitions/TargetSetsType" },
        "undefine":     { "$ref": "#/definitions/UndefinesType" },
        "variables":    { "$ref": "#/definitions/VariablesType" },
        "warnings":     { "$ref": "#/definitions/WarningsType" },
        "west-defs":    { "$ref": "#/definitions/DefinesType" }
      },
      "additionalProperties": false,
      "required" : [ "type"]
    },
    "BuildTypes": {
      "title": "build-types:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#build-types",
      "type": "array",
      "description": "List of build type names that allow to switch between different build settings such as: Release, Debug, Test.",
      "uniqueItems": true,
      "minItems": 1,
      "items": { "$ref": "#/definitions/BuildType" }
    },
    "BuildType": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "pattern": "^([a-zA-Z0-9_-]{1,32})$",
          "description": "Name of a build configuration type.\nExample: Release | Debug | Test ."
        },
        "add-path":     { "$ref": "#/definitions/AddpathsType" },
        "add-path-asm": { "$ref": "#/definitions/AddAsmPathsType" },
        "compiler":     { "$ref": "#/definitions/CompilerType" },
        "context-map":  { "$ref": "#/definitions/ContextMapType" },
        "debug":        { "$ref": "#/definitions/DebugType" },
        "define":       { "$ref": "#/definitions/DefinesType" },
        "define-asm":   { "$ref": "#/definitions/DefinesAsmType"},
        "del-path":     { "$ref": "#/definitions/DelpathsType" },
        "language-C":   { "$ref": "#/definitions/LanguageCType" },
        "language-CPP": { "$ref": "#/definitions/LanguageCppType" },
        "link-time-optimize": { "$ref": "#/definitions/LinkTimeOptimizeType" },
        "misc":         { "$ref": "#/definitions/MiscTypes" },
        "optimize":     { "$ref": "#/definitions/OptimizeType" },
        "processor":    { "$ref": "#/definitions/ProcessorType" },
        "undefine":     { "$ref": "#/definitions/UndefinesType" },
        "variables":    { "$ref": "#/definitions/VariablesType" },
        "warnings":     { "$ref": "#/definitions/WarningsType" },
        "west-defs":    { "$ref": "#/definitions/DefinesType" }
      },
      "additionalProperties": false,
      "required" : [ "type"]
    },
    "ProjectsType": {
      "title": "projects:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#projects",
      "type": "array",
      "description": "List of projects defined as part of this solution.",
      "uniqueItems": true,
      "minItems": 1,
      "items": { "$ref": "#/definitions/ProjectType" }
    },
    "ProjectType": {
      "type": "object",
      "properties": {
        "project": {
          "title": "project:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#projects",
          "type": "string",
          "pattern": "^.*[/]([^.+]*\\.cproject\\.(yml|yaml))$|^([^.+]+)\\.cproject\\.(yml|yaml)$",
          "description": "Path to the valid project file."
        },
        "west": { "$ref": "#/definitions/WestProjectType" },
        "for-context":     { "$ref": "#/definitions/ForContext" },
        "not-for-context": { "$ref": "#/definitions/NotForContext" }
      },
      "additionalProperties": false,
      "oneOf": [
        { "$ref": "#/definitions/TypeListMutualExclusion"}
      ]
    },
    "ProcessorTrustzone": {
      "title": "trustzone:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#processor",
      "enum": [ "secure", "secure-only", "non-secure", "off" ],
      "description": "Select TrustZone mode:\n secure | secure-only | non-secure | off ."
    },
    "ProcessorFpu": {
      "title": "fpu:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#processor",
      "enum": [ "dp", "sp", "off" ],
      "description": "Controls usage of FPU instructions:\ndp (double precision)\n sp (single precision)\n off (disabled) ."
    },
    "BuildProcessorFpu": {
      "title": "fpu:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#processor",
      "enum": [ "on", "dp", "sp", "off" ],
      "description": "Controls usage of FPU instructions:\non (enabled)\n dp (double precision)\n sp (single precision)\n off (disabled) ."
    },
    "ProcessorDsp": {
      "title": "dsp:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#processor",
      "enum": [ "on", "off" ],
      "description": "Controls usage of DSP instruction set extensions as supported by the processor:\n on (enabled) | off (disabled) ."
    },
    "ProcessorMve": {
      "title": "mve:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#processor",
      "enum": [ "fp", "int", "off" ],
      "description": "Controls usage of M-Profile Vector Extension Instructions:\n fp (floating point and integer instructions)\n int (integer instructions)\n off (disabled) ."
    },
    "ProcessorEndian": {
      "title": "endian:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#processor",
      "enum": [ "little", "big" ],
      "description": "Controls endianess: little | big ."
    },
    "ProcessorBranchProtection": {
      "title": "branch-protection:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#processor",
      "enum": [ "bti", "bti-signret", "off" ],
      "description": "Select Branch Protection mode:\n bti (branch target identification)\n bit-signret (bti and pointer authentication)\n off (disabled) ."
    },
    "ProcessorType": {
      "title": "processor:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#processor",
      "type": ["object", "null"],
      "description": "Configures usage of processor features.",
      "properties": {
        "trustzone": { "$ref": "#/definitions/ProcessorTrustzone" },
        "fpu": { "$ref": "#/definitions/ProcessorFpu" },
        "dsp": { "$ref": "#/definitions/ProcessorDsp" },
        "mve": { "$ref": "#/definitions/ProcessorMve" },
        "endian": { "$ref": "#/definitions/ProcessorEndian" },
        "branch-protection": { "$ref": "#/definitions/ProcessorBranchProtection" }
      },      
      "additionalProperties": false
    },
    "BuildProcessorType": {
      "type": ["object", "null"],
      "description": "Processor specific settings.",
      "properties": {
        "trustzone": { "$ref": "#/definitions/ProcessorTrustzone" },
        "fpu": { "$ref": "#/definitions/BuildProcessorFpu" },
        "dsp": { "$ref": "#/definitions/ProcessorDsp" },
        "mve": { "$ref": "#/definitions/ProcessorMve" },
        "endian": { "$ref": "#/definitions/ProcessorEndian" },
        "branch-protection": { "$ref": "#/definitions/ProcessorBranchProtection" },
        "core": {"type": "string", "description": "Processor core."}
      },      
      "additionalProperties": false
    },
    "GroupsType": {
      "title": "groups:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#groups",
      "type": "array",
      "description": "List of file groups to be added to a project or layer.",
      "uniqueItems": true,
      "minItems": 1,
      "items": { "$ref": "#/definitions/GroupType" }
    },
    "GroupType": {
      "type": "object",
      "properties": {
        "group": {
          "title": "group:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#groups",
          "type": "string",
          "description": "Name of the source file group."
        },
        "add-path": { "$ref": "#/definitions/AddpathsType" },
        "add-path-asm": { "$ref": "#/definitions/AddAsmPathsType" },
        "debug": { "$ref": "#/definitions/DebugType" },
        "define": { "$ref": "#/definitions/DefinesType" },
        "define-asm": { "$ref": "#/definitions/DefinesAsmType" },
        "del-path": { "$ref": "#/definitions/DelpathsType" },
        "files": { "$ref": "#/definitions/FilesType" },
        "for-context": { "$ref": "#/definitions/ForContext" },
        "for-compiler": {
          "title": "for-compiler:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#for-compiler",
          "$ref": "#/definitions/CompilersType"
        },
        "groups": { "$ref": "#/definitions/GroupsType" },
        "language-C": { "$ref": "#/definitions/LanguageCType" },
        "language-CPP": { "$ref": "#/definitions/LanguageCppType" },
        "link-time-optimize": { "$ref": "#/definitions/LinkTimeOptimizeType" },
        "misc": { "$ref": "#/definitions/MiscTypes" },
        "not-for-context": { "$ref": "#/definitions/NotForContext" },
        "optimize": { "$ref": "#/definitions/OptimizeType" },
        "undefine": { "$ref": "#/definitions/UndefinesType" },
        "warnings": { "$ref": "#/definitions/WarningsType" }
      },
      "allOf": [
        { "$ref": "#/definitions/TypeListMutualExclusion" },
        { "anyOf": [
            {"required" : ["files"]},
            {"required" : ["groups"]}
          ]
        }
      ],
      "additionalProperties": false
    },
    "BuildGroupsType": {
      "title": "groups:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-CBuild-Format/#groups",
      "type": "array",
      "description": "List of file groups.",
      "uniqueItems": true,
      "minItems": 1,
      "items": { "$ref": "#/definitions/BuildGroupType" }
    },
    "BuildGroupType": {
      "type": "object",
      "properties": {
        "group":           { "type": "string", "description": "Name of the file group." },
        "for-context":     { "$ref": "#/definitions/ForContext" },
        "not-for-context": { "$ref": "#/definitions/NotForContext" },
        "for-compiler":    { "$ref": "#/definitions/CompilersType" },
        "optimize":        { "$ref": "#/definitions/OptimizeType" },
        "debug":           { "$ref": "#/definitions/DebugType" },
        "warnings":        { "$ref": "#/definitions/WarningsType" },
        "language-C":      { "$ref": "#/definitions/LanguageCType" },
        "language-CPP":    { "$ref": "#/definitions/LanguageCppType" },
        "link-time-optimize": { "$ref": "#/definitions/LinkTimeOptimizeType" },
        "define":          { "$ref": "#/definitions/DefinesType" },
        "define-asm":      { "$ref": "#/definitions/DefinesAsmType" },
        "undefine":        { "$ref": "#/definitions/UndefinesType" },
        "add-path":        { "$ref": "#/definitions/AddpathsType" },
        "add-path-asm":    { "$ref": "#/definitions/AddAsmPathsType" },
        "del-path":        { "$ref": "#/definitions/DelpathsType" },
        "misc":            { "$ref": "#/definitions/MiscTypes" },
        "groups":          { "$ref": "#/definitions/BuildGroupsType" },
        "files":           { "$ref": "#/definitions/FilesType" }
      },
      "additionalProperties": false
    },
    "FilesType": {
      "title": "files:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#files",
      "type": "array",
      "description": "List of source files to be added to a project or layer.",
      "uniqueItems": true,
      "items": { "$ref": "#/definitions/FileType" }
    },
    "FileCategoryType": {
      "enum": [ "api", "doc", "header", "headerAsm", "headerC", "headerCpp", "headerLd", "include", "includeAsm", "includeC", "includeCpp", "includeLd", "library", "object", "source", "sourceC", "sourceCpp", "sourceAsm", "linkerScript", "utility", "image", "preIncludeGlobal", "preIncludeLocal","genSource", "genHeader", "genParams", "genAsset", "other" ],
      "description": "File category types define the use of component files within the application. Typically, these files are added to the project and processed by the build tools."
    },
    "FileAttributeType": {
      "enum": [ "config", "template" ],
      "description": "The file attribute defines the special handling in the project when being used as configuration or template file."
    },
    "FileLanguageType": {
      "title": "languange:",
      "enum": [ "asm", "c", "cpp", "c-cpp", "link" ],
      "description": "File language attribute type defines the language for source, header and include file categories. Based on the language the information is used by language specific build tools."
    },
    "FileScopeType": {
      "enum": [ "visible", "hidden", "public", "private" ],
      "description": "File scope attribute type defines the visibility of header file and include path file categories. Based on the specified scope header files are visible or hidden and include paths are public or private."
    },
    "FileType": {
      "type": "object",
      "properties": {
        "file": {
          "title": "file:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#files",
          "type": "string",
          "description": "File name along with the path."
        },
        "add-path":        { "$ref": "#/definitions/AddpathsType" },
        "add-path-asm":    { "$ref": "#/definitions/AddAsmPathsType" },
        "attr":            { "title": "attr:", "$ref": "#/definitions/FileAttributeType" },
        "base": {
          "title": "base:",
          "type": "string",
          "description": "Current configuration file with version."
        },
        "category":        {
          "title": "category:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#filename-extensions",
          "$ref": "#/definitions/FileCategoryType"
        },
        "debug":           { "$ref": "#/definitions/DebugType" },
        "define":          { "$ref": "#/definitions/DefinesType" },
        "define-asm":      { "$ref": "#/definitions/DefinesAsmType" },
        "del-path":        { "$ref": "#/definitions/DelpathsType" },
        "for-compiler":    {
          "title": "for-compiler:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#for-compiler",
          "$ref": "#/definitions/CompilersType"
        },
        "for-context":     { "$ref": "#/definitions/ForContext" },
        "language":        { "$ref": "#/definitions/FileLanguageType" },
        "language-C":      { "$ref": "#/definitions/LanguageCType" },
        "language-CPP":    { "$ref": "#/definitions/LanguageCppType" },
        "link-time-optimize": { "$ref": "#/definitions/LinkTimeOptimizeType" },
        "misc":            { "$ref": "#/definitions/MiscTypes" },
        "not-for-context": { "$ref": "#/definitions/NotForContext" },
        "optimize":        { "$ref": "#/definitions/OptimizeType" },
        "scope":           { "$ref": "#/definitions/FileScopeType" },
        "select":          {
          "title": "select:",
          "type": "string",
          "description": "Description and purpose of the file."
        },
        "status":          {
          "title": "status:",
          "$ref": "#/definitions/PLMStatusType"
        },
        "version":         {
          "title": "version:",
          "$ref": "#/definitions/VersionType"
        },
        "undefine":        { "$ref": "#/definitions/UndefinesType" },
        "update":          {
          "title": "update:",
          "type": "string",
          "description": "New configuration file used for merge utility."
        },
        "warnings":        { "$ref": "#/definitions/WarningsType" }
      },
      "allOf": [
        { "$ref": "#/definitions/TypeListMutualExclusion" },
        { "required": [ "file" ] }
      ],
      "additionalProperties": false
    },
    "GeneratorsType": {
      "type": "array",
      "description": "Information for calling generators.",
      "uniqueItems": true,
      "minItems": 1,
      "items": { "$ref": "#/definitions/GeneratorType" }
    },
    "GeneratorType": {
      "description": "General generator info.",
      "type": "object",
      "properties": {
        "from-pack": { "$ref": "#/definitions/PackID" },
        "generator": { "type": "string", "description": "Section for a specific generator." },
        "path":      { "type": "string", "description": "Path name for storing the files generated." },
        "gpdsc":     { "type": "string", "description": "File name of the *.GDPSC file that stores the information in path." },
        "command":   { "$ref": "#/definitions/CommandType" }
      },
      "required": [ "generator", "path", "gpdsc", "command" ]
    },
    "CommandType": {
      "type": "object",
      "description": "Section for invoking the generator on different Host operating systems.",
      "properties": {
        "win":   { "$ref": "#/definitions/HostSpecificCommand" },
        "linux": { "$ref": "#/definitions/HostSpecificCommand" },
        "mac":   { "$ref": "#/definitions/HostSpecificCommand" },
        "other": { "$ref": "#/definitions/HostSpecificCommand" }
      }
    },
    "HostSpecificCommand": {
      "type": "object",
      "description": "Command for one of the supported host types (Windows, Linux, Mac or other).",
      "properties": {
        "file": {
          "type": "string",
          "description": "Path to the executable."
        },
        "arguments": {
          "type": "array",
          "items": { "type": "string" },
          "description": "Arguments passed when executing the command."
        }
      }
    },
    "ComponentGeneratorType": {
      "title": "generator:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-CBuild-Format/#generator",
      "description": "Component specific generator info. Any field in this object overrides the corresponding value from the general GeneratorType.",
      "type": "object",
      "properties": {
        "id": { "type": "string", "description": "Generator identifier." },
        "path": { "type": "string", "description": "Path name for storing the files generated." },
        "from-pack": { "$ref": "#/definitions/PackID"},
        "files": { "$ref": "#/definitions/FilesType" }
      },
      "required": [ "id" ]
    },
    "ComponentID": {
      "type": "string",
      "pattern": "(^[A-Za-z0-9][a-zA-Z0-9_\\+()'\\/\\- \\.]+$)|(^([A-Za-z0-9][A-Za-z0-9 \\-]+::)?([A-Za-z0-9][a-zA-Z0-9_\\+()'\\/\\- \\.]+)(&[A-Za-z0-9][a-zA-Z0-9_\\+()'\\/\\- \\.]+)?(:[A-Za-z0-9][a-zA-Z0-9_\\+()'\\/\\- \\.]+)(:[A-Za-z0-9][a-zA-Z0-9_\\+():\\/\\- \\.]*)?(&[A-Za-z0-9][a-zA-Z0-9_\\+()'\\/\\- \\.]+)?(@(>=)?((0|[1-9][0-9]*)\\.([0-9]+)(\\.([0-9]+))?(\\-((0|[1-9][0-9]*|[0-9]*[a-zA-Z-][0-9a-zA-Z-]*)(\\.(0|[1-9][0-9]*|[0-9]*[a-zA-Z-][0-9a-zA-Z-]*))*))?))?$)",
      "description": "Name of the software component\nFormat:  [Cvendor::] Cclass [&Cbundle] :Cgroup [:Csub] [&Cvariant] [@[>=]Cversion]."
    },
    "ComponentsType": {
      "title": "components:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#components",
      "type": "array",
      "description": "List of software components that are added from packs. Can be applied in *.cproject.yml and *.clayer.yml files.",
      "uniqueItems": true,
      "minItems": 1,
      "items": { "$ref": "#/definitions/ComponentType" }
    },
    "ComponentType": {
      "type": "object",
      "properties": {
        "component": {
          "title:": "component:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#components",
          "$ref": "#/definitions/ComponentID"
        },
        "add-path":     { "$ref": "#/definitions/AddpathsType" },
        "add-path-asm": { "$ref": "#/definitions/AddAsmPathsType" },
        "condition":    { "$ref": "#/definitions/ConditionIDType" },
        "debug":        { "$ref": "#/definitions/DebugType" },
        "define":       { "$ref": "#/definitions/DefinesType" },
        "define-asm":   { "$ref": "#/definitions/DefinesAsmType" },
        "del-path":     { "$ref": "#/definitions/DelpathsType" },
        "for-context":  { "$ref": "#/definitions/ForContext" },
        "from-pack":    { "$ref": "#/definitions/PackID" },
        "instances":    { "$ref": "#/definitions/InstancesType" },
        "language-C":   { "$ref": "#/definitions/LanguageCType" },
        "language-CPP": { "$ref": "#/definitions/LanguageCppType" },
        "link-time-optimize": { "$ref": "#/definitions/LinkTimeOptimizeType" },
        "misc":         { "$ref": "#/definitions/MiscTypes" },
        "not-for-context": { "$ref": "#/definitions/NotForContext" },
        "optimize":     { "$ref": "#/definitions/OptimizeType" },
        "undefine":     { "$ref": "#/definitions/UndefinesType" },
        "warnings":     { "$ref": "#/definitions/WarningsType" }
      },
      "allOf": [
        { "$ref": "#/definitions/TypeListMutualExclusion" },
        { "required": [ "component" ] }
      ],
      "additionalProperties": false
    },
    "RteType": {
      "title": "rte:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#rte",
      "type": ["object", "null"],
      "description": "Allows to control the directory structure for RTE (run-time environment) files.",
      "properties": {
        "base-dir": {
          "title": "base-dir:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#rte",
          "type": "string",
          "description": "Base directory for RTE files; default: $ProjectDir()$/RTE ."
        }
      },
      "additionalProperties": false
    },
    "GeneratorsOutputType": {
      "title": "generators:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#generators",
      "type": ["object", "null"],
      "description": "Directory structure for generator output files.",
      "properties": {
        "base-dir": {
          "title": "base-dir:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#generators",
          "type": "string",
          "description": "Base directory for unspecified generators; default: $ProjectDir()$/generated."
        },
        "options": { "$ref": "#/definitions/GeneratorOptionsType" }
      },
      "additionalProperties": false
    },
    "GeneratorOptionsType": {
      "title": "options:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#generators-options",
      "type": "array",
      "description": "Specific generator options; allows explicit directory configuration for a generator.",
      "uniqueItems": true,
      "minItems": 1,
      "items": { "$ref": "#/definitions/GeneratorOptionType" }
    },
    "GeneratorOptionType": {
      "type": ["object", "null"],
      "properties": {
        "generator": {
          "title": "generator:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#generators-options",
          "type": "string",
          "description": "Identifier of the generator tool, specified with id in the generators element of the PDSC file."
        },
        "map": {
          "title": "map:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#generators-options",
          "type": "string",
          "description": "Mapping of the csolution project to a generator specific run-time context name."
        },
        "name": {
          "title": "name:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#generators-options",
          "type": "string",
          "description": "Base name of the generator import file, typically used for a board layer."
        },
        "path": {
          "title": "path:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#generators-options",
          "type": "string",
          "description": "Directory path for generated files. Relative paths use the location of the yml file as base directory."
        }
      },
      "additionalProperties": false,
      "required": [ "generator" ]
    },
    "LayersType": {
      "title": "layers:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#layers",
      "type": "array",
      "description": "List of software layers that belong to the project.",
      "uniqueItems": true,
      "items": { "$ref": "#/definitions/LayerType" }
    },
    "LayerType": {
      "type": "object",
      "properties": {
        "layer": {
          "title": "layer:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#layers",
          "type": "string",
          "description": "Path to the '*.clayer.yml' file that defines the layer."
        },
        "type": {
          "title": "type:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#layer-type",
          "type": "string",
          "description": "Layer type for compatible layers matching."
        },
        "optional": {
          "title": "optional:",
          "type": "boolean",
          "description": "Set optional to 'false' to require the layer type when searching compatible layers; default: 'true'."
        },
        "for-context":     { "$ref": "#/definitions/ForContext" },
        "not-for-context": { "$ref": "#/definitions/NotForContext" }
      },
      "allOf": [
        { "$ref": "#/definitions/TypeListMutualExclusion" },
        { "anyOf": [
            { "required": ["layer"], "not": {"required": ["optional"]} },
            { "required": ["type"]  }
          ]
        }
      ],
      "additionalProperties": false
    },
    "DefaultDescType": {
      "title": "default:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#cdefault",
      "type": "object",
      "properties": {
        "compiler":        { "$ref": "#/definitions/CompilerType", "description": "'compiler' setting in cdefault.yml will be deprecated in CMSIS-Toolbox 3.0.0." },
        "select-compiler": { "$ref": "#/definitions/SelectCompilersType", "description": "'select-compiler' setting in cdefault.yml will be deprecated in CMSIS-Toolbox 3.0.0." },
        "misc":            { "$ref": "#/definitions/MiscTypes" }
      },
      "additionalProperties": false
    },
    "SolutionDescType": {
      "title": "solution:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#solution",
      "type": "object",
      "description": "Defines projects, targets and build types implemented within this solution.",
      "properties": {
        "add-path":        { "$ref": "#/definitions/AddpathsType" },
        "add-path-asm":    { "$ref": "#/definitions/AddAsmPathsType"},
        "build-types":     { "$ref": "#/definitions/BuildTypes" },
        "cdefault": {
          "title": "cdefault:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#cdefault",
          "type": "null",
          "description": "Enables use of cdefault.yml file for compiler controls."
        },
        "compiler":        { "$ref": "#/definitions/CompilerType" },        
        "created-by": {
          "title": "created-by:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#solution",
          "$ref": "#/definitions/CreatedInfoType",
          "description": "The tool that creates this csolution project."
        },
        "created-for": {
          "title": "created-for:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#solution",
          "$ref": "#/definitions/CreatedInfoType",
          "description": "The tool required to build this csolution project."
        },
        "debug":           { "$ref": "#/definitions/DebugType" },
        "define":          { "$ref": "#/definitions/DefinesType" },
        "define-asm":      { "$ref": "#/definitions/DefinesAsmType" },
        "del-path":        { "$ref": "#/definitions/DelpathsType" },
        "description": {
          "title": "description:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#solution",
          "type": "string",
          "description": "Brief description of this solution."
        },
        "executes":        { "$ref": "#/definitions/ExecutesType" },
        "generators":      { "$ref": "#/definitions/GeneratorsOutputType" },
        "language-C":      { "$ref": "#/definitions/LanguageCType" },
        "language-CPP":    { "$ref": "#/definitions/LanguageCppType" },
        "link-time-optimize": { "$ref": "#/definitions/LinkTimeOptimizeType" },
        "misc":            { "$ref": "#/definitions/MiscTypes" },
        "optimize":        { "$ref": "#/definitions/OptimizeType" },
        "output-dirs":     { "$ref": "#/definitions/OutputDirectoriesType" },
        "packs":           { "$ref": "#/definitions/PacksType" },
        "processor":       { "$ref": "#/definitions/ProcessorType" },
        "projects":        { "$ref": "#/definitions/ProjectsType" },
        "select-compiler": { "$ref": "#/definitions/SelectCompilersType" },
        "target-types":    { "$ref": "#/definitions/TargetTypes" },
        "undefine":        { "$ref": "#/definitions/UndefinesType" },
        "variables":       { "$ref": "#/definitions/VariablesType" },
        "warnings":        { "$ref": "#/definitions/WarningsType" }
      },
      "additionalProperties": false,
      "required": [ "target-types" ]
    },
    "ProjectDescType": {
      "title": "project:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#project",
      "type": ["object", "null"],
      "description": "Defines files, components, and layers which can be independently translated to a binary image or library.",
      "properties": {
        "add-path":     { "$ref": "#/definitions/AddpathsType" },
        "add-path-asm": { "$ref": "#/definitions/AddAsmPathsType" },
        "board":        { "$ref": "#/definitions/BoardType" },
        "compiler":     {
          "title": "compiler:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#compiler",
          "$ref": "#/definitions/CompilerType"
        },
        "components":   { "$ref": "#/definitions/ComponentsType" },
        "connections":  { "$ref": "#/definitions/ConnectionsType" },
        "debug":        { "$ref": "#/definitions/DebugType" },
        "define":       { "$ref": "#/definitions/DefinesType" },
        "define-asm":   { "$ref": "#/definitions/DefinesAsmType" },
        "del-path":     { "$ref": "#/definitions/DelpathsType" },
        "description":  {
          "title": "description:",
          "type": "string",
          "description": "Brief description of this project."
        },
        "device":       { "$ref": "#/definitions/DeviceType" },
        "executes":     { "$ref": "#/definitions/ExecutesType" },
        "generators":   { "$ref": "#/definitions/GeneratorsOutputType" },
        "groups":       { "$ref": "#/definitions/GroupsType" },
        "language-C":   { "$ref": "#/definitions/LanguageCType" },
        "language-CPP": { "$ref": "#/definitions/LanguageCppType" },
        "layers":       { "$ref": "#/definitions/LayersType" },
        "linker":       { "$ref": "#/definitions/LinkersType" },
        "link-time-optimize": { "$ref": "#/definitions/LinkTimeOptimizeType" },
        "misc":         { "$ref": "#/definitions/MiscTypes" },
        "optimize":     { "$ref": "#/definitions/OptimizeType" },
        "output":       { "$ref": "#/definitions/OutputType" },
        "packs":        { "$ref": "#/definitions/PacksType" },
        "processor":    { "$ref": "#/definitions/ProcessorType" },
        "rte":          { "$ref": "#/definitions/RteType" },
        "setups":       { "$ref": "#/definitions/SetupsType" },
        "undefine":     { "$ref": "#/definitions/UndefinesType" },
        "warnings":     { "$ref": "#/definitions/WarningsType" }
      },
      "additionalProperties": false
    },
    "BuildIdxDescType": {
      "title": "build-idx:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-CBuild-Format/#cbuild-idxyml",
      "type": "object",
      "properties": {
        "description":  { "type": "string" },
        "generated-by": { "type": "string", "description": "Tool name along with version information used to generate this file." },
        "cdefault": { "type": "string", "description": "Path to cdefault.yml file." },
        "csolution": { "type": "string", "description": "Path to csolution.yml file." },
        "cbuild-run": { "type": "string", "description": "Path to cbuild-run.yml file." },
        "tmpdir": { "type": "string", "description": "Specifies the directory for the interim temporary files." },
        "image-only": { "type": "boolean", "description": "Indicates image only solution." },
        "cprojects": { "$ref": "#/definitions/BuildProjectsType" },
        "cbuilds": { "$ref": "#/definitions/BuildContextsType" },
        "configurations": { "$ref": "#/definitions/BuildConfigurationsType" },
        "select-compiler": {
          "title": "select-compiler:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-CBuild-Format/#select-compiler",
          "$ref": "#/definitions/SelectCompilersType"
        },
        "executes": { "$ref": "#/definitions/BuildExecutesType" },
        "rebuild":  { "type": "boolean", "description": "Flag indicating intermediate files need to be cleaned before the next build." }
      },
      "additionalProperties": false,
      "required": ["generated-by", "csolution"]
    },
    "BuildProjectsType": {
      "title": "cprojects:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-CBuild-Format/#cprojects",
      "type": "array",
      "uniqueItems": true,
      "minItems": 1,
      "items": { "$ref": "#/definitions/BuildProjectType", "description": "Paths to cproject.yml files." }
    },
    "BuildProjectType": {
      "type": "object",
      "properties": {
        "cproject": { "type": "string", "description": "Path to cproject.yml file." },
        "clayers": { "$ref": "#/definitions/BuildLayersType" }
      },
      "additionalProperties": false,
      "required": ["cproject"]
    },
    "BuildLayersType": {
      "type": "array",
      "uniqueItems": true,
      "minItems": 1,
      "items": { "$ref": "#/definitions/BuildLayerType", "description": "List of clayers." }
    },
    "BuildLayerType": {
      "type": "object",
      "properties": {
        "clayer": { "type": "string", "description": "Path to clayer.yml file." }
      },
      "additionalProperties": false,
      "required": ["clayer"]
    },
    "BuildContextsType": {
      "title": "cbuilds:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-CBuild-Format/#cbuilds",
      "type": "array",
      "uniqueItems": true,
      "minItems": 1,
      "items": { "$ref": "#/definitions/BuildContextType", "description": "List of context related build information" }
    },
    "BuildContextType": {
      "type": "object",
      "properties": {
        "cbuild": { "type": "string", "description": "Path to <context>.cbuild.yml file." },
        "west": { "type": "boolean" },
        "project": { "type": "string", "description": "Project name." },
        "configuration": { "$ref": "#/definitions/BuildContext" },
        "depends-on": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^([^\\.\\+]+(\\.[a-zA-Z0-9_-]{1,32})?\\+[a-zA-Z0-9_-]{1,32})(-[a-zA-Z0-9_-]{1,32})?|([a-zA-Z0-9_-]{1,32})$"
          }
        },
        "errors": { "type": "boolean", "description": "Indicates error(s) during conversion" },
        "packs-missing": { "$ref": "#/definitions/BuildPacksInfoType", "description": "Names of the missing packs." },
        "packs-unused": { "$ref": "#/definitions/BuildPacksInfoType", "description": "Names of the unused packs." },
        "clayers": { "$ref": "#/definitions/BuildLayersType" },
        "rebuild": { "type": "boolean", "description": "Flag indicating intermediate files need to be cleaned before the next build." },
        "messages": { "$ref": "#/definitions/MessagesType" }
      },
      "additionalProperties": false,
      "required": ["cbuild", "configuration"]
    },
    "BuildConfigurationsType": {
      "type": "array",
      "uniqueItems": true,
      "minItems": 1,
      "items": { "$ref": "#/definitions/BuildConfigurationType", "description": "Target specific layer configurations." }
    },
    "BuildConfigurationType": {
      "title": "configurations:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-CBuild-Format/#configurations",
      "type": "object",
      "properties": {
        "target-type": { "type": "string", "description": "Name of the target." },
        "target-configurations" : { "$ref": "#/definitions/BuildTargetConfigurationsType" }
      },
      "additionalProperties": false,
      "required": ["target-type", "target-configurations"]
    },
    "BuildTargetConfigurationsType": {
      "type": "array",
      "uniqueItems": true,
      "minItems": 1,
      "items": { "$ref": "#/definitions/BuildTargetConfigurationType", "description": "Target compatible configurations." }
    },
    "BuildTargetConfigurationType": {
      "type": "object",
      "properties": {
        "configuration": { "type": "null" },
        "variables": { "$ref": "#/definitions/BuildLayerVariablesType", "description": "List of layer variables." }
      },
      "additionalProperties": false,
      "required": ["configuration", "variables"]
    },
    "BuildLayerVariablesType": {
      "type": "array",
      "uniqueItems": true,
      "minItems": 1,
      "items": { "$ref": "#/definitions/BuildLayerVariableType" }
    },
    "BuildLayerVariableType": {
      "type": "object",
      "patternProperties": {
        "^.*-Layer$":  { "type": "string", "description": "Unique variable name for the layer." },
        "description": { "type": "string", "description": "Brief description text (from *.clayer.yml)." },
        "settings":    { "$ref": "#/definitions/BuildConnectionSettingsType" },
        "path":        { "type": "string", "description": "Path to the directory that contains the layer (from *.PDSC file)." },
        "file":        { "type": "string", "description": "Name of the *.clayer.yml file relative to the directory specified with path (from *.PDSC file)."},
        "copy-to":     { "type": "string", "description": "Proposed directory for the layer in the csolution project (from *.PDSC file)." }
      },
      "additionalProperties": false
    },
    "BuildConnectionSettingsType": {
      "type": "array",
      "uniqueItems": true,
      "minItems": 1,
      "items": { "$ref": "#/definitions/BuildConnectionSetType", "description": "List of connection sets" }
    },
    "BuildConnectionSetType": {
      "type": "object",
      "properties": {
        "set": { "type": "string", "description": "Connection set configurations." }
      },
      "additionalProperties": false,
      "required": ["set"]
    },
    "BuildDescType": {
      "title": "build:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-CBuild-Format/#cbuildyml",
      "description": "The lock info that describes the resolved state of contexts and also can be used as input for generators.",
      "type": "object",
      "properties": {
        "generated-by": {
          "type": "string",
          "description": "Tool name along with version information used to generate this application."
        },
        "current-generator": {
          "type": "object",
          "description": "What generator configuration to use.",
          "properties": {
            "from-pack": { "$ref": "#/definitions/PackID" },
            "id":        { "type": "string" }
          },
          "additionalProperties": false,
          "required": [ "id" ]
        },
        "solution": {
          "type": "string",
          "description": "Relative path to the csolution file for this context."
        },
        "project": {
          "type": "string",
          "description": "Relative path to the cproject file for this context."
        },
        "context":           { "$ref": "#/definitions/BuildContextWithProjectName" },
        "compiler":          { "$ref": "#/definitions/CompilerType" },
        "board":             { "$ref": "#/definitions/BoardType" },
        "board-pack":        { "$ref": "#/definitions/PackID" },
        "board-books":       { "$ref": "#/definitions/BooksType" },
        "device":            { "$ref": "#/definitions/DeviceType" },
        "device-pack":       { "$ref": "#/definitions/PackID" },
        "device-books":      { "$ref": "#/definitions/BooksType" },
        "dbgconf":           { "$ref": "#/definitions/DebugConfigsType" },
        "processor":         { "$ref": "#/definitions/BuildProcessorType" },
        "packs":             { "$ref": "#/definitions/BuildPacksType" },
        "optimize":          { "$ref": "#/definitions/OptimizeType" },
        "debug":             { "$ref": "#/definitions/DebugType" },
        "warnings":          { "$ref": "#/definitions/WarningsType" },
        "language-C":        { "$ref": "#/definitions/LanguageCType" },
        "language-CPP":      { "$ref": "#/definitions/LanguageCppType" },
        "link-time-optimize": { "$ref": "#/definitions/LinkTimeOptimizeType" },
        "misc":              { "$ref": "#/definitions/MiscType" },
        "define":            { "$ref": "#/definitions/BuildDefinesType" },
        "define-asm":        { "$ref": "#/definitions/BuildDefinesType" },
        "add-path":          { "$ref": "#/definitions/AddpathsType" },
        "add-path-asm":      { "$ref": "#/definitions/AddAsmPathsType" },
        "output-dirs":       { "$ref": "#/definitions/BuildOutputDirectoriesType" },
        "output":            { "$ref": "#/definitions/OutputFilesType" },
        "components":        {
          "title": "components:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-CBuild-Format/#components",
          "$ref": "#/definitions/ResolvedComponentsType"
         },
        "apis":              { "$ref": "#/definitions/ResolvedApisType" },
        "linker":            {
          "title": "linker:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-CBuild-Format/#linker",
          "$ref": "#/definitions/LinkerType"
        },
        "groups":            { "$ref": "#/definitions/BuildGroupsType" },
        "generators":        { "$ref": "#/definitions/GeneratorsType" },
        "executes":          { "$ref": "#/definitions/BuildExecutesType" },
        "constructed-files": {
          "title": "constructed-files:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-CBuild-Format/#constructed-files",
          "type": "array",
          "items": { "$ref": "#/definitions/FileType" }
        },
        "licenses": {
          "type": "array",
          "items": { "$ref": "#/definitions/LicenseInfoType" }
        },
        "west": { "$ref": "#/definitions/WestProjectType" }
      },
      "additionalProperties": false
    },
    "BuildPacksInfoType": {
      "type": "array",
      "uniqueItems": true,
      "minItems": 1,
      "items": { "$ref": "#/definitions/BuildPackInfoType" }
    },
    "BuildPackInfoType": {
      "type": "object",
      "properties": {
        "pack": { "type": "string", "description": "Name of the missing pack." }
      },
      "additionalProperties": false,
      "required": ["pack"]
    },
    "LayerDescType": {
      "title": "layer:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#layer",
      "type": "object",
      "description": "This section describes layer contents.",
      "properties": {

        "add-path":     { "$ref": "#/definitions/AddpathsType" },
        "add-path-asm": { "$ref": "#/definitions/AddAsmPathsType" },
        "board":        { "$ref": "#/definitions/BoardType" },
        "compiler":     { "$ref": "#/definitions/CompilerType" },
        "components":   { "$ref": "#/definitions/ComponentsType" },
        "connections":  { "$ref": "#/definitions/ConnectionsType" },
        "debug":        { "$ref": "#/definitions/DebugType" },
        "define":       { "$ref": "#/definitions/DefinesType" },
        "define-asm":   { "$ref": "#/definitions/DefinesType" },
        "del-path":     { "$ref": "#/definitions/DelpathsType" },
        "description": {
          "title": "description:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#layer",
          "type": "string",
          "description": "Brief description of the layer."
        },
        "device":       { "$ref": "#/definitions/DeviceType" },
        "for-board": {
          "title": "for-board:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#layer",
          "$ref": "#/definitions/BoardType",
          "description": "Board information, used for consistency check."
        },
        "for-device": {
          "title": "for-device:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#layer",
          "$ref": "#/definitions/DeviceType",
          "description": "Device information, used for consistency check."
        },
        "generators":   { "$ref": "#/definitions/GeneratorsOutputType" },
        "groups":       { "$ref": "#/definitions/GroupsType" },
        "language-C":   { "$ref": "#/definitions/LanguageCType" },
        "language-CPP": { "$ref": "#/definitions/LanguageCppType" },
        "linker":       { "$ref": "#/definitions/LinkersType" },
        "link-time-optimize": { "$ref": "#/definitions/LinkTimeOptimizeType" },
        "misc":         { "$ref": "#/definitions/MiscTypes" },
        "packs":        { "$ref": "#/definitions/PacksType" },
        "processor":    { "$ref": "#/definitions/ProcessorType" },
        "type":         {
          "title": "type:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#layer-type",
          "type": "string",
          "description": "Layer type for compatible layers matching."
        },
        "optimize":     { "$ref": "#/definitions/OptimizeType" },
        "undefine":     { "$ref": "#/definitions/UndefinesType" },
        "warnings":     { "$ref": "#/definitions/WarningsType" }
      },
      "additionalProperties": false
    },
    "LicenseInfoPackType": {
      "type": "object",
      "properties": {
        "pack": { "$ref": "#/definitions/PackID" }
      }
    },
    "LicenseInfoComponentType": {
      "type": "object",
      "properties": {
        "component": { "type": "string" }
      }
    },
    "LicenseInfoType": {
      "title": "licenses:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-CBuild-Format/#licenses",
      "type": "object",
      "description": "License information about packs and components.",
      "properties": {
        "license": {
          "type": "string",
          "description": "License SPDX name or title."
        },
        "license-agreement": {
          "type": "string",
          "description": "Path to license agreement file."
        },
        "packs": {
          "type": "array",
          "items": { "$ref": "#/definitions/LicenseInfoPackType" }
        },
        "components": {
          "type": "array",
          "description": "List of components or APIs component to license agreement file.",
          "items": { "$ref": "#/definitions/LicenseInfoComponentType" }
        }
      }
    },
    "BuildPackDescType": {
      "title": "cbuild-pack:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-CBuild-Format/#cbuild-packyml",
      "type": "object",
      "properties": {
        "resolved-packs": { "$ref": "#/definitions/ResolvedPacksType" }
      },
      "additionalProperties": false,
      "required": [ "resolved-packs" ]
    },
    "ResolvedPacksType": {
      "type": "array",
      "uniqueItems": true,
      "items": { "$ref": "#/definitions/ResolvedPackType" }
    },
    "ResolvedPackType": {
      "type": "object",
      "properties": {
        "resolved-pack": { "$ref": "#/definitions/PackID" },
        "selected-by-pack": {
          "type": "array",
          "uniqueItems": true,
          "items": { "$ref": "#/definitions/PackID" }
        },
        "selected-by": {
          "type": "array",
          "uniqueItems": true,
          "items": { "$ref": "#/definitions/PackID" }
        }
      },
      "additionalProperties": false,
      "required": [ "resolved-pack" ]
    },
    "BuildPacksType": {
      "title": "packs:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-CBuild-Format/#packs",
      "type": "array",
      "uniqueItems": true,
      "minItems": 1,
      "items": { "$ref": "#/definitions/BuildPackType" }
    },
    "BuildPackType": {
      "type": "object",
      "properties": {
        "pack": { "$ref": "#/definitions/PackID" },
        "path": { "type": "string", "description": "Local path to the software pack." }
      },
      "required": [ "pack", "path" ],
      "additionalProperties": false
    },
    "PacksType": {
      "title": "packs:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#packs",
      "type": "array",
      "description": "List of required CMSIS software packs.",
      "uniqueItems": true,
      "items": { 
        "oneOf": [
          {"$ref": "#/definitions/PackType" },
          {"$ref": "#/definitions/PackPathType" }
        ]
      }
    },
    "PackID": {
      "title": "pack:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#pack",
      "type": "string",
      "pattern": "^([a-zA-Z0-9_ \\.-]+)((::[a-zA-Z0-9_ \\.\\*-]+)(@(>=|\\~|\\^)?([0-9]+\\.[0-9]+\\.[0-9]+((\\+|\\-)[a-zA-Z0-9_\\.\\+-]+)?))?)?$",
      "description": "Name of a software pack with the following format:\n  [vendor ::] pack-name # Use the latest version of the pack\n  [vendor ::] pack-name@version # With exact version\n  [vendor ::] pack-name@>=version # With version equal or higher\n  [vendor ::] pack-name@^version # With version equal or higher but the same major version\n  [vendor ::] pack-name@~version # With version equal or higher but the same major and minor version"
    },
    "VersionlessPackID": {
      "title": "pack:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#pack",
      "type": "string",
      "pattern": "^([a-zA-Z0-9_ \\.\\-]+)(::[a-zA-Z0-9_ \\.\\*-]+)?$",
      "description": "Name of a software pack.\nFormat: Vendor [:: Pack].\nExample: ARM::CMSIS."
    },
    "PackType": {
      "type": "object",
      "properties": {
        "pack": { "$ref": "#/definitions/PackID" },
        "for-context":     { "$ref": "#/definitions/ForContext" },
        "not-for-context": { "$ref": "#/definitions/NotForContext" }
      },
      "allOf": [
        { "$ref": "#/definitions/TypeListMutualExclusion" },
        { "required": [ "pack" ] }
      ],
      "additionalProperties": false
    },
    "PackPathType": {
      "type": "object",
      "properties": {
        "pack": { "$ref": "#/definitions/VersionlessPackID" },
        "path": {
          "title": "path:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#packs",
          "type": "string",
          "description": "Local path to the software pack."
        },
        "for-context":     { "$ref": "#/definitions/ForContext" },
        "not-for-context": { "$ref": "#/definitions/NotForContext" }
      },
      "allOf": [
        { "$ref": "#/definitions/TypeListMutualExclusion" },
        { "required": [ "pack", "path" ] }
      ],
      "additionalProperties": false
    },
    "ResolvedComponentsType": {
      "title": "components:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#components",
      "type": "array",
      "description": "List of software components in their resolved state.",
      "uniqueItems": true,
      "items": { "$ref": "#/definitions/ResolvedComponentType" }
    },
    "ResolvedComponentType": {
      "type": "object",
      "description": "Software component in its resolved state.",
      "properties": {
        "component":    { "$ref": "#/definitions/ComponentID" },
        "condition":    { "$ref": "#/definitions/ConditionIDType" },
        "selected-by":  { "$ref": "#/definitions/ComponentID" },
        "implements":   { "$ref": "#/definitions/ComponentID" },
        "rtedir":       { "type": "string" },
        "optimize":     { "$ref": "#/definitions/OptimizeType" },
        "debug":        { "$ref": "#/definitions/DebugType" },
        "warnings":     { "$ref": "#/definitions/WarningsType" },
        "language-C":   { "$ref": "#/definitions/LanguageCType" },
        "language-CPP": { "$ref": "#/definitions/LanguageCppType" },
        "link-time-optimize": { "$ref": "#/definitions/LinkTimeOptimizeType" },
        "define":       { "$ref": "#/definitions/DefinesType" },
        "define-asm":   { "$ref": "#/definitions/DefinesType" },
        "undefine":     { "$ref": "#/definitions/UndefinesType" },
        "add-path":     { "$ref": "#/definitions/AddpathsType" },
        "add-path-asm": { "$ref": "#/definitions/AddAsmPathsType" },
        "del-path":     { "$ref": "#/definitions/DelpathsType" },
        "misc":         { "$ref": "#/definitions/MiscTypes" },
        "files":        { "$ref": "#/definitions/FilesType" },
        "generator":    { "$ref": "#/definitions/ComponentGeneratorType" },
        "from-pack":    { "$ref": "#/definitions/PackID" },
        "instances":    { "$ref": "#/definitions/InstancesType" },
        "maxInstances": { "$ref": "#/definitions/MaxInstancesType" }
      },
      "additionalProperties": false
    },
    "ResolvedApisType": {
      "title": "apis:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-CBuild-Format/#apis",
      "type": "array",
      "description": "List of API in their resolved state.",
      "uniqueItems": true,
      "items": { "$ref": "#/definitions/ResolvedApiType" }
    },
    "ResolvedApiType": {
      "type": "object",
      "description": "API in its resolved state.",
      "properties": {
        "api":            { "$ref": "#/definitions/ComponentID" },
        "condition":      { "$ref": "#/definitions/ConditionIDType" },
        "implemented-by": { "$ref": "#/definitions/ImplementedByType" },
        "files":          { "$ref": "#/definitions/FilesType" },
        "from-pack":      { "$ref": "#/definitions/PackID" }
      },
      "additionalProperties": false
    },
    "ImplementedByType": {
      "oneOf": [
        { "type": "array", "items": { "$ref": "#/definitions/ComponentID" } },
        { "$ref": "#/definitions/ComponentID" }
      ]
    },
    "SetupsType": {
      "title": "setups:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#setups",
      "type": "array",
      "description": "List of setup nodes that collects various toolchain options.",
      "uniqueItems": true,
      "items": { "$ref": "#/definitions/SetupType" }
    },
    "SetupType": {
      "type": "object",
      "properties": {
        "setup":           {
          "title": "setup:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#setups",
          "type": "string",
          "description": "Description of the setup."
        },
        "add-path":        { "$ref": "#/definitions/AddpathsType" },
        "add-path-asm":    { "$ref": "#/definitions/AddAsmPathsType" },
        "debug":           { "$ref": "#/definitions/DebugType" },
        "define":          { "$ref": "#/definitions/DefinesType" },
        "define-asm":      { "$ref": "#/definitions/DefinesType" },
        "del-path":        { "$ref": "#/definitions/DelpathsType" },
        "for-compiler":    {
          "title": "for-compiler:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#for-compiler",
          "$ref": "#/definitions/CompilersType"
        },
        "for-context":     { "$ref": "#/definitions/ForContext" },
        "language-C":      { "$ref": "#/definitions/LanguageCType" },
        "language-CPP":    { "$ref": "#/definitions/LanguageCppType" },
        "linker":          { "$ref": "#/definitions/LinkersType" },
        "link-time-optimize": { "$ref": "#/definitions/LinkTimeOptimizeType" },
        "misc":            { "$ref": "#/definitions/MiscTypes" },
        "not-for-context": { "$ref": "#/definitions/NotForContext" },
        "optimize":        { "$ref": "#/definitions/OptimizeType" },
        "output":          { "$ref": "#/definitions/OutputType" },
        "processor":       { "$ref": "#/definitions/ProcessorType" },
        "undefine":        { "$ref": "#/definitions/UndefinesType" },
        "warnings":        { "$ref": "#/definitions/WarningsType" }
      },
      "oneOf": [
        { "$ref": "#/definitions/TypeListMutualExclusion" }
      ],
      "additionalProperties": false
    },
    "ConnectionsType": {
      "title": "connections:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#connections",
      "description": "List of consumed and provided connections.",
      "type": "array",
      "uniqueItems": true,
      "items": { "$ref": "#/definitions/ConnectType" }
    },
    "ConnectType": {
      "type": "object",
      "description": "Group of specific functionality.",
      "properties": {
        "connect": {
          "title": "connect:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#connect",
          "type": "string",
          "description": "Description of specific functionality."
        },
        "set": {
          "title": "set:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#set",
          "type": "string",
          "pattern": "^.+\\..+$",
          "description": "Set configuration option in the format 'config-id.select'."
        },
        "info": {
          "title": "info:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#connect",
          "type": "string",
          "description": "Display description when connect is selected."
        },
        "consumes": {
          "title": "consumes:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#consumes",
          "type": "array",
          "description": "Consumed connections.",
          "items": { "$ref": "#/definitions/ConsumesProvidesType" }
        },
        "provides": {
          "title": "provides:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#provides",
          "type": "array",
          "description": "Provided connections.",
          "items": { "$ref": "#/definitions/ConsumesProvidesType" }
        }
      },
      "additionalProperties": false,
      "required": [ "connect" ]
    },
    "LinkersType": {
      "title": "linker:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#linker",
      "description": "Specifies an explicit linker script and/or memory regions header file. Can be applied in *.cproject.yml and *.clayer.yml files.",
      "type": "array",
      "uniqueItems": true,
      "items": { "$ref": "#/definitions/LinkerType" }
    },
    "LinkerType": {
      "type": "object",
      "properties": {
        "auto": {
          "title": "auto:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#linker",
          "type": "null",
          "description": "Use automatic linker script generation."
        },
        "regions": {
          "title": "regions:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#linker",
          "type": "string",
          "description": "Path and file name of regions_<device_or_board>.h, used to generate a Linker Script."
        },
        "script": {
          "title": "script:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#linker",
          "type": "string",
          "description": "Explicit file name of the Linker Script, overrules files provided with file: or components."
        },
        "define":          { "$ref": "#/definitions/DefinesType" },
        "for-context":     { "$ref": "#/definitions/ForContext" },
        "not-for-context": { "$ref": "#/definitions/NotForContext" },
        "for-compiler":    { "$ref": "#/definitions/CompilersType" }
      },
      "oneOf": [
        { "$ref": "#/definitions/TypeListMutualExclusion" }
      ],
      "additionalProperties": false
    },
    "CreatedInfoType": {
      "type": "string",
      "pattern": "^.*@[0-9]+\\.[0-9]+\\.[0-9]+(-[0-9A-Za-z-]+(\\.[0-9A-Za-z-]+)*)?(\\+[0-9A-Za-z-]+(\\.[0-9A-Za-z-]+)*)?$"
    },
    "BuildSetDescType": {
      "title": "cbuild-set:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-CBuild-Format/#cbuild-setyml",
      "type": "object",
      "properties": {
        "generated-by": { "type": "string", "description": "Tool name along with version information used to generate this application." },
        "contexts": { "$ref": "#/definitions/BuildSetContextsType", "description": "List of fully specified contexts." },
        "compiler": { "type": "string", "description": "Selection of compiler used." },
        "environment": {
          "description": "Environment specific settings.",
          "additionalProperties": true
        }
      },
      "additionalProperties": false,
      "required": ["generated-by", "contexts"]
    },
    "GeneratorRegistryDescType": {
      "type": "array",
      "uniqueItems": true,
      "minItems": 1,
      "items": { "$ref": "#/definitions/GeneratorRegistryType", "description": "List of global generator description." }
    },
    "GeneratorRegistryType": {
      "type": "object",
      "properties": {
        "id": { "type": "string", "description": "Generator identifier." },
        "description": { "type": "string", "description": "Generator description" },
        "download-url": { "type": "string", "description": "URL for downloading generator tool." },
        "run": { "type": "string", "description": "Related bridge program." },
        "path": { "type": "string", "description": "Specifies the directory for generated files." }
      },
      "additionalProperties": false,
      "required": ["id", "run", "path"]
    },
    "BuildGenIdxDescType": {
      "title": "build-gen-idx:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-CBuild-Format/#file-structure-of-cbuild-gen-idxyml",
      "type": "object",
      "properties": {
        "generated-by": { "type": "string", "description": "Tool name along with version information used to generate this file." },
        "generators": { "$ref": "#/definitions/BuildGeneratorsType", "description": "List of generators to be run." },
        "compiler": { "type": "string", "description": "Selection of compiler used." }
      },
      "additionalProperties": false,
      "required": ["generated-by", "generators"]
    },
    "BuildGeneratorsType": {
      "title": "generators:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-CBuild-Format/#generators",
      "type": "array",
      "uniqueItems": true,
      "minItems": 1,
      "items": { "$ref": "#/definitions/BuildGeneratorType", "description": "Build Generator solution related information." }
    },
    "BuildGeneratorType": {
      "type": "object",
      "properties": {
        "id": { "type": "string", "description": "Generator identifier." },
        "output": { "type": "string", "description": "Specifies the directory for generated files." },
        "board": { "$ref": "#/definitions/BoardType" },
        "device": { "$ref": "#/definitions/DeviceType" },
        "project-type": { "$ref": "#/definitions/BuildGeneratorProjectType" },
        "cbuild-gens": { "$ref": "#/definitions/BuildGeneratorContextsType" }
      },
      "additionalProperties": false,
      "required": ["id", "output", "project-type", "cbuild-gens"]
    },
    "BuildGeneratorProjectType": {
      "enum": [ "single-core", "multi-core", "trustzone" ],
      "description": "Project type (single-core, multi-core, trustzone)."
    },
    "BuildGeneratorContextsType": {
      "type": "array",
      "uniqueItems": true,
      "minItems": 1,
      "items": { "$ref": "#/definitions/BuildGeneratorContextType", "description": "Build Generator context related information" }
    },
    "BuildGeneratorContextType": {
      "type": "object",
      "properties": {
        "cbuild-gen":       { "type": "string", "description": "Path to <context>.cbuild-gen.yml file." },
        "project":          { "type": "string", "description": "Project name." },
        "configuration":    { "$ref": "#/definitions/BuildContext" },
        "for-project-part": { "type": "string", "description": "For project part (secure, non-secure, <processor>)." },
        "name":             { "type": "string", "description": "Explicit name for the *.cgen.yml generator import file." },
        "map":              { "type": "string", "description": "Mapping of the csolution project to a generator specific run-time context name." }
      },
      "additionalProperties": false,
      "required": ["cbuild-gen", "project", "configuration"]
    },
    "GeneratorImportDescType": {
      "title": "generator-import:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-CBuild-Format/#file-structure-of-cgenyml",
      "type": "object",
      "description": "This section describes generated contents",
      "properties": {
        "generated-by": { "type": "string", "description": "Tool name along with version information used to generate this file." },
        "for-board":    { "title:": "for-board:", "$ref": "#/definitions/BoardType" },
        "for-device":   { "title:": "for-device:","$ref": "#/definitions/DeviceType" },
        "packs":        { "$ref": "#/definitions/PacksType" },
        "define":       { "$ref": "#/definitions/DefinesType" },
        "define-asm":   { "$ref": "#/definitions/DefinesType" },
        "undefine":     { "$ref": "#/definitions/UndefinesType" },
        "add-path":     { "$ref": "#/definitions/AddpathsType" },
        "add-path-asm": { "$ref": "#/definitions/AddAsmPathsType" },
        "del-path":     { "$ref": "#/definitions/DelpathsType" },
        "groups":       { "$ref": "#/definitions/GroupsType" },
        "components":   { "$ref": "#/definitions/ComponentsType" }
      },
      "additionalProperties": false
    },
    "ExecutesType": {
      "title": "executes:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#executes",
      "description": "Additional pre or post build steps using external tools.",
      "type": "array",
      "uniqueItems": true,
      "minItems": 1,
      "items": { "$ref": "#/definitions/ExecuteType" }
    },
    "ExecuteType": {
      "type": "object",
      "properties": {
        "execute": {
          "title": "execute:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#executes",
          "type": "string",
          "pattern": "^([a-zA-Z0-9_-]{1,32})$",
          "description": "Unique name of the execution step."
        },
        "always": {
          "title": "always:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#executes",
          "type": "null",
          "description": "When present, the build step always runs and bypasses check for outdated files."
        },
        "for-context": {
          "$ref": "#/definitions/ForContext"
        },
        "input": {
          "title": "input:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#executes",
          "type": "array",
          "description": "A list of input files (may contain Access Sequences).",
          "items": {
            "type": "string"
          }
        },
        "not-for-context": {
          "$ref": "#/definitions/NotForContext"
        },
        "output": {
          "title": "output:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#executes",
          "type": "array",
          "description": "A list of output files (may contain Access Sequences).",
          "items": {
            "type": "string"
          }
        },
        "run": {
          "title": "run:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#executes",
          "type": "string",
          "description": "Command string with name of the program or script (optionally with path) along with argument string."
        }
      },
      "additionalProperties": false,
      "allOf": [
        { "$ref": "#/definitions/TypeListMutualExclusion"},
        { "required": ["execute", "run"] }
      ]
    },
    "BuildExecutesType": {
      "description": "Additional pre or post build steps using external tools.",
      "type": "array",
      "uniqueItems": true,
      "items": { "$ref": "#/definitions/BuildExecuteType" }
    },
    "BuildExecuteType": {
      "type": "object",
      "properties": {
        "execute":    { "type": "string", "description": "Description of the build step." },
        "run":        { "type": "string", "description": "Command string with name of the program or script (optionally with path) along with argument string." },
        "always":     { "type": "null",   "description": "When present, the build step always runs and bypasses check for outdated files." },
        "input":      { "type": "array",  "description": "A list of input files (may contain Access Sequences).",  "items": { "type": "string"} },
        "output":     { "type": "array",  "description": "A list of output files (may contain Access Sequences).", "items": { "type": "string"} },
        "depends-on": { 
          "type": "array",
          "items": {
              "type": "string",
              "pattern": "^([^\\.\\+]+(\\.[a-zA-Z0-9_-]{1,32})?\\+[a-zA-Z0-9_-]{1,32})(-[a-zA-Z0-9_-]{1,32})?|([a-zA-Z0-9_-]{1,32})$"
            }
          }
      },
      "additionalProperties": false,
      "required": ["execute", "run"]
    },
    "MessagesType": {
      "type": ["object", "null"],
      "description": "Errors, warnings and info messages.",
      "properties": {
        "errors":   { "type": "array",  "items": { "type": "string"} },
        "warnings": { "type": "array",  "items": { "type": "string"} },
        "info":     { "type": "array",  "items": { "type": "string"} }
      },      
      "additionalProperties": false
    },
    "MemoryAccessType": {
      "description": "Access attribute string for the memory.",
      "pattern": "^[rwxpsnc]+$",
      "type": "string"
    },
    "MemoryType": {
      "title": "memory:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#memory",
      "description": "Additional memory available",
      "type": "array",
      "uniqueItems": true,
      "items": { "$ref": "#/definitions/MemoryItem" }
    },
    "MemoryItem": {
      "type": "object",
      "properties": {
        "name":     { "title": "name:", "type": "string", "description": "Identifier of the memory." },
        "access":   { "title": "access:", "$ref": "#/definitions/MemoryAccessType" },
        "start":    { "title": "start:", "type": "number", "description": "Base address of the memory." },
        "size":     { "title": "size:", "type": "number", "description": "Size of the memory." },
        "algorithm":{ "title": "algorithm:", "type": "string", "description": "Programming algorithm for download." }
      },
      "additionalProperties": false,
      "required": ["name", "access", "start", "size"]
    },
    "ProgrammingType": {
      "title": "programming:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-CBuild-Format/#programming",
      "description": "Algorithms for flash download.",
      "type": "array",
      "uniqueItems": true,
      "items": { "$ref": "#/definitions/AlgorithmType" }
    },
    "AlgorithmType": {
      "type": "object",
      "properties": {
        "algorithm":{ "type": "string", "description": "Programming algorithm file including the path." },
        "start":    { "type": "number", "description": "Start address of memory covered by the programming algorithm." },
        "size":     { "type": "number", "description": "Size of memory covered by the programming algorithm." },
        "ram-start":{ "type": "number", "description": "Start address of RAM where the algorithm will be executed from." },
        "ram-size": { "type": "number", "description": "Maximum size of RAM available for executing the programming algorithm." },
        "pname":    { "type": "string", "description": "Specifies the processor for the execution of the algorithm." }
      },
      "additionalProperties": false,
      "required": ["algorithm", "start", "size", "ram-start", "ram-size"]
    },
    "RunOutputFilesType": {
      "title": "output:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-CBuild-Format/#output",
      "description": "List of the image (ELF, HEX, BIN) files generated.",
      "type": "array",
      "uniqueItems": true,
      "items": { "$ref": "#/definitions/RunOutputFileType" }
    },
    "RunOutputFileType": {
      "type": "object",
      "properties": {
        "file":        { "type": "string", "description": "Specifies the file name." },
        "type":        { "type": "string", "description": "Specifies the file type." },
        "info":        { "type": "string", "description": "Brief description of the file." },
        "load":        { "$ref": "#/definitions/TargetSetLoadType" },
        "load-offset": { "type": "number", "description": "Offset applied in *.csolution.yml when loading the image file." },
        "pname":       { "type": "string", "description": "Image belongs to processor in a multi-core system." }
      },
      "additionalProperties": false,
      "required": ["file", "type", "load"]
    },
    "RunSystemFilesType": {
      "title": "output:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-CBuild-Format/#system-descriptions",
      "description": "List of description files for peripherals and software components.",
      "type": "array",
      "uniqueItems": true,
      "items": { "$ref": "#/definitions/RunSystemFileType" }
    },
    "RunSystemFileType": {
      "type": "object",
      "properties": {
        "file":  { "type": "string", "description": "Specifies the file name." },
        "type":  { "type": "string", "description": "Specifies the file type." },
        "info":  { "type": "string", "description": "Brief description of the file." },
        "pname": { "type": "string", "description": "Image belongs to processor in a multi-core system." }
      },
      "additionalProperties": false,
      "required": ["file", "type"]
    },
    "DebugSequencesType": {
      "title": "system-resources:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-CBuild-Format/#debug-sequences",
      "description": "Tool actions for debugging, tracing, or programming.",
      "type": "array",
      "uniqueItems": true,
      "items": { "$ref": "#/definitions/DebugSequenceType" }
    },
    "DebugSequenceType": {
      "description": "A list of command blocks in order of execution.",
      "type": "object",
      "properties": {
        "name":    { "type": "string", "description": "Name of the sequence." },
        "info":    { "type": "string", "description": "Descriptive text to display for example for error diagnostics." },
        "blocks":  { "$ref": "#/definitions/DebugBlocksType" },
        "pname":   { "type": "string", "description": "Executes sequence only for the specified processor; default is for all processors." }
      },
      "additionalProperties": false,
      "required": ["name"]
    },
    "DebugBlocksType": {
      "type": "array",
      "uniqueItems": false,
      "items": { "$ref": "#/definitions/DebugBlockType" }
    },
    "DebugBlockType": {
      "description": "A list of command blocks in order of execution.",
      "type": "object",
      "properties": {
        "info":    { "type": "string", "description": "Descriptive text to display for example for error diagnostics." },
        "blocks":  { "$ref": "#/definitions/DebugBlocksType" },
        "execute": { "type": "string", "description": "Commands for execution." },
        "atomic":  { "type": "null", "description": "Atomic execution of commands; cannot be used with 'blocks'" },
        "if":      { "anyOf": [{"type": "string"}, {"type": "number"}], "description": "Only executed when expression is true." },
        "while":   { "anyOf": [{"type": "string"}, {"type": "number"}], "description": "Executed in loop until while expression is true." },
        "timeout": { "type": "number", "description": "Timeout in milliseconds for while loop." }
      },
      "additionalProperties": false
    },
    "SystemResourcesType": {
      "title": "system-resources:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-CBuild-Format/#system-resources",
      "description": "List of the system resources available in target.",
      "type": "object",
      "properties": {
        "memory": { "$ref": "#/definitions/SystemMemoriesType" }
      },
      "additionalProperties": false
    },
    "SystemMemoriesType": {
      "type": "array",
      "uniqueItems": true,
      "items": { "$ref": "#/definitions/SystemMemoryType" }
    },
    "SystemMemoryType": {
      "type": "object",
      "properties": {
        "name":      { "type": "string", "description": "Name of the memory region." },
        "access":    { "$ref": "#/definitions/MemoryAccessType" },
        "start":     { "type": "number", "description": "Base address of the memory." },
        "size":      { "type": "number", "description": "Size of the memory." },
        "pname":     { "type": "string", "description": "Only accessible by the specified processor." },
        "alias":     { "type": "string", "description": "Name of identical memory exposed at different address." },
        "from-pack": { "$ref": "#/definitions/PackID" }
      },
      "additionalProperties": false,
      "required": ["name", "access", "start", "size"]
    },
    "DebuggerType": {
      "title": "debugger:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-CBuild-Format/#debugger",
      "description": "Configuration information for the debug connection.",
      "type": "object",
      "properties": {
        "name":            { "type": "string", "description": "Identifies the debug configuration." },
        "info":            { "type": "string", "description": "Brief description from target-set." },
        "protocol":        { "enum": [ "jtag", "swd" ], "description": "Selected debug protocol (jtag or swd)." },
        "clock":           { "type": "number", "description": "Selected debug clock speed (in Hz)." },
        "dbgconf":         { "type": "string", "description": "Debugger configuration file (pinout, trace)." },
        "start-pname":     { "type": "string", "description": "Debugger connects at start to this processor." },
        "gdbserver":       { "$ref": "#/definitions/GdbServersType" }
      },
      "additionalProperties": true,
      "required": ["name"]
    },
    "GdbServersType": {
      "title": "gdbserver:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-CBuild-Format/#gdbserver",
      "description": "Information for GDB server option of debugger.",
      "type": "array",
      "uniqueItems": true,
      "items": { "$ref": "#/definitions/GdbServerType" }
    },
    "GdbServerType": {
      "type": "object",
      "properties": {
        "port":  { "type": "number", "description": "Port number of processor." },
        "pname": { "type": "string", "description": "Processor name of the processor (only required for multi-core systems)." },
        "punit": { "type": "number", "description": "Identifies the procssor core in a SMP system." }
      },
      "additionalProperties": false,
      "required": ["port"]
    },
    "DebugVarsType": {
      "title": "debug-vars:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-CBuild-Format/#debug-vars",
      "description": "Debug variables for debug sequences.",
      "type": "object",
      "properties": {
        "vars":  { "type": "string", "description": "Initial values for debug variables used in debug sequences." }
      },
      "additionalProperties": false,
      "required": ["vars"]
    },
    "DebugPortsType": {
      "description": "Describes the CoreSight debug ports of the device and its capabilities.",
      "type": "array",
      "uniqueItems": true,
      "items": { "$ref": "#/definitions/DebugPortType" }
    },
    "DebugPortType": {
      "type": "object",
      "properties": {
        "dpid": { "type": "number", "description": "Unique ID of this debug port." },
        "jtag": { "type": "object", "properties": {
          "tapindex": { "type": "number", "description": "TAP index in the JTAG scan chain of this device from TDI to TDO (default 0)." }}},
        "swd": { "type": "object", "properties": {
          "targetsel": { "type": "number", "description": "SWD multi-drop target selection." }}},
        "accessports": { "$ref": "#/definitions/AccessPortsType" }
      },
      "additionalProperties": false,
      "required": ["dpid"]
    },
    "AccessPortsType": {
      "description": "List of CoreSight access ports (APv1/APv2) (mandatory for multi-processor devices).",
      "type": "array",
      "uniqueItems": true,
      "items": { "$ref": "#/definitions/AccessPortType" }
    },
    "AccessPortType": {
      "type": "object",
      "properties": {
        "apid":        { "type": "number", "description": "Unique ID of this access port." },
        "index":       { "type": "number", "description": "The index to select this access port (APv1) for a target access." },
        "address":     { "type": "number", "description": "The address to select this access port (APv2) in its parent's address space for a target access." },
        "HPROT":       { "type": "number", "description": "Value for HPROT (AHB Protection Control) bits." },
        "SPROT":       { "type": "number", "description": "Value for SPROT (Secure Protection Control) bit." },
        "datapatch":   { "$ref": "#/definitions/DatapatchesType" },
        "accessports": { "$ref": "#/definitions/AccessPortsType" }
      },
      "additionalProperties": false,
      "required": ["apid"]
    },
    "DatapatchesType": {
      "description": "List of patch values a debugger shall apply when reading from the device.",
      "type": "array",
      "uniqueItems": true,
      "items": { "$ref": "#/definitions/DatapatchType" }
    },
    "DatapatchType": {
      "type": "object",
      "properties": {
        "address": { "type": "number", "description": "Address for which to apply the patch." },
        "value":   { "type": "number", "description": "Value to overwrite from device (for example in a ROM table)." },
        "mask":    { "type": "number", "description": "The bits to patch. Default: complete value is replaced." },
        "type":    { "type": "string", "description": "Type of data access to patch. Default is Mem." },
        "info":    { "type": "string", "description": "Descriptive text for diagnostics messages." }
      },
      "additionalProperties": false,
      "required": ["address", "value"]
    },
    "DebugProcessorsType": {
      "description": "Map of pname identifiers to access port IDs (mandatory for multi-processor devices).",
      "type": "array",
      "uniqueItems": true,
      "items": { "$ref": "#/definitions/DebugProcessorType" }
    },
    "DebugProcessorType": {
      "type": "object",
      "properties": {
        "pname":            { "type": "string", "description": "Processor identifier." },
        "punits":           { "$ref": "#/definitions/DebugPunitsType" },
        "apid":             { "type": "number", "description": "Access port ID to use for this processor." },
        "reset-sequence":   { "type": "string", "description": "Name of debug sequence for reset operation" }
      },
      "additionalProperties": false
    },
    "DebugPunitsType": {
      "description": "Specifies processor units in a symmetric multi-processor core (MPCore).",
      "type": "array",
      "uniqueItems": true,
      "items": { "$ref": "#/definitions/DebugPunitType" }
    },
    "DebugPunitType": {
      "type": "object",
      "properties": {
        "punit":   { "type": "number", "description": "Specifies a specific processor unit of a symmetric MPCore." },
        "address": { "type": "number", "description": "Specifies the base address of the CPU debug block." }
      },
      "additionalProperties": false,
      "required": ["punit", "address"]
    },
    "DebugTopologyType": {
      "title": "debug-topology:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-CBuild-Format/#debug-topology",
      "description": "Properties of the system hardware for debug functionality.",
      "type": "object",
      "properties": {
        "debugports": { "$ref": "#/definitions/DebugPortsType" },
        "processors": { "$ref": "#/definitions/DebugProcessorsType" },
        "swj":        { "type": "boolean", "description": "Device allows switching between Serial Wire Debug (SWD) and JTAG protocols (true or false)." },
        "dormant":    { "type": "boolean", "description": "Device requires the dormant state to switch debug protocols (true or false)." },
        "sdf":        { "type": "string", "description": "System Description File (*.sdf) specified in the DFP." }
      },
      "additionalProperties": false
    },
    "RunDebugDescType": {
      "description": "This section describes generated contents",
      "type": "object",
      "properties": {
        "generated-by":        { "type": "string", "description": "Tool name that generated this file." },
        "solution":            { "type": "string", "description": "Name of the `*.csolution.yml` file." },
        "target-type":         { "type": "string", "description": "Name of the target-type that was selected." },
        "target-set":          { "type": "string", "description": "Name of the target-set that was selected." },
        "compiler":            { "type": "string", "description": "Compiler toolchain used for code generation." },
        "board":               { "$ref": "#/definitions/BoardType" },
        "board-pack":          { "$ref": "#/definitions/PackID" },
        "device":              { "$ref": "#/definitions/DeviceType" },
        "device-pack":         { "$ref": "#/definitions/PackID" },
        "output":              { "$ref": "#/definitions/RunOutputFilesType" },
        "system-resources":    { "$ref": "#/definitions/SystemResourcesType" },
        "system-descriptions": { "$ref": "#/definitions/RunSystemFilesType" },
        "debugger":            { "$ref": "#/definitions/DebuggerType" },
        "debug-vars":          { "$ref": "#/definitions/DebugVarsType" },
        "debug-sequences":     { "$ref": "#/definitions/DebugSequencesType" },
        "programming":         { "$ref": "#/definitions/ProgrammingType" },
        "debug-topology":      { "$ref": "#/definitions/DebugTopologyType" }
      },
      "additionalProperties": false,
      "required": ["output", "debugger"]
    },
    "TargetSetsType": {
      "title": "target-set:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#target-set",
      "description": "One or more target-set configurations for projects, images, and debugger.",
      "type": "array",
      "uniqueItems": true,
      "items": { "$ref": "#/definitions/TargetSetType" }
    },
    "TargetSetType": {
      "type": "object",
      "properties": {
        "set":      { "type": ["string", "null"], "description": "Start of a configuration, optional with name. The default set is unnamed." },
        "info":     { "type": "string", "description": "Brief description of the configuration." },
        "images":   { "$ref": "#/definitions/TargetSetImagesType" },
        "debugger": { "$ref": "#/definitions/TargetSetDebuggerType" }
      },
      "additionalProperties": false,
      "required": ["set"]
    },
    "TargetSetImagesType": {
      "title": "images:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#images",
      "description": "List of images that belong to this set.",
      "type": "array",
      "uniqueItems": true,
      "items": { "$ref": "#/definitions/TargetSetImageType" }
    },
    "TargetSetProjectContext": {
      "description": "Project output with optional build-type: '<project_name>[.build_type]'.",
      "type": "string",
      "pattern": "^([^\\.\\+]+(\\.[a-zA-Z0-9_-]{1,32})?)$"
    },
    "TargetSetImageType": {
      "type": "object",
      "properties": {
        "project-context": { "$ref": "#/definitions/TargetSetProjectContext" },
        "image":           { "type": "string", "description": "Additional image file to load." },
        "info":            { "type": "string", "description": "Brief description of the image file." },
        "type":            { "enum": [ "elf", "hex", "bin", "lib" ], "description": "Specifies an explicit image type." },
        "load":            { "$ref": "#/definitions/TargetSetLoadType" },
        "load-offset":     { "type": "number", "description": "Offset applied to the binary content when loading the image file." },
        "device":          { "$ref": "#/definitions/ProcessorNameType" }
      },
      "additionalProperties": false,
      "oneOf": [
        { "required": ["project-context"], "not": {"required": ["image", "type", "device"]} },
        { "required": ["image"], "not": {"required": ["project-context"]} }
      ]
    },
    "TargetSetDebuggerType": {
      "title": "debugger:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#debugger",
      "description": "Debugger configuration for this set.",
      "type": "object",
      "properties": {
        "name":            { "type": "string", "description": "Identifies the debug adapter." },
        "protocol":        { "enum": [ "jtag", "swd" ], "description": "Selected debug protocol (jtag or swd)." },
        "clock":           { "type": "number", "description": "Selected debug clock speed (in Hz)." },
        "dbgconf":         { "type": "string", "description": "Debugger configuration file (pinout, trace)." },
        "start-pname":     { "type": "string", "description": "Debugger connects at start to this processor." }
      },
      "additionalProperties": true,
      "required": ["name"]
    },
    "TargetSetLoadType": {
      "title": "load:\nDocumentation: https://open-cmsis-pack.github.io/cmsis-toolbox/YML-Input-Format/#load",
      "description": "Specifies the load mode for the project output or image file.",
      "enum": [ "image+symbols", "symbols", "image", "none" ]
    },
    "WestProjectType": {
      "title": "west:",
      "description": "Enable West build orchestration wrapper for Zephyr projects.",
      "type": "object",
      "properties": {
        "app-path":   { "type": "string", "description": "Path to the application source directory." },
        "project-id": { "type": "string", "description": "Project identifier (default: last sub-dir name of app-path)." },
        "board":      { "type": "string", "description": "Board name used for west build invocation (default: variable $west-board$)."},
        "device":     { "$ref": "#/definitions/ProcessorNameType" },
        "west-defs":  { "$ref": "#/definitions/DefinesType" },
        "west-opts":  { "type": "string", "description": "Options for the west tool (default: empty)." }
      },
      "additionalProperties": false,
      "required": ["app-path"]
    }
  }
}
