name: test_libs
on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/test_libs.yml'
      - '.github/matrix_includes_test_libs.json'
      - 'libs/**'
      - '!**/*.md'
  pull_request:
    paths:
      - '.github/workflows/test_libs.yml'
      - '.github/matrix_includes_test_libs.json'
      - 'libs/**'
      - '!**/*.md'

jobs:
  matrix_prep:
    runs-on: ubuntu-22.04
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - name: Check out repo
      uses: actions/checkout@v3
    - id: set-matrix
      run: |
        publicRepo=$(echo '${{ github.event.repository.private && 'privateRepo' || 'publicRepo' }}')
        matrix=$(jq --arg publicRepo "$publicRepo" 'map(. | select((.runOn==$publicRepo) or (.runOn=="always")) )' matrix_includes_test_libs.json)
        echo "matrix={\"include\":$(echo $matrix)}\"" >> $GITHUB_OUTPUT
      working-directory: .github/
  test_libs:
    runs-on: ${{ matrix.runs_on }}
    needs: matrix_prep
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.matrix_prep.outputs.matrix) }}
    steps:
      - name: Checkout devtools
        uses: actions/checkout@v3
        with:
          submodules: true

      # https://github.com/Open-CMSIS-Pack/devtools-build-action
      - name: Build all libs
        uses: Open-CMSIS-Pack/devtools-build-action@v1.1
        id: devtools-build
        with:
          add_cmake_variables: '-DLIBS_ONLY=ON'
          arch: ${{ matrix.arch }}
          target: all

      - name: Install macos deps
        if: ${{ startsWith(matrix.runs_on, 'macos') }}
        run: |
          brew install \
            dos2unix \
            wget

      - name: Install linux deps
        if: ${{ startsWith(matrix.runs_on, 'ubuntu') }}
        run: |
          sudo apt update
          sudo apt-get install \
            dos2unix \
            libxml2-utils

      # CrossPlatformUnitTests failing for aarch64
      - name: Run libs unittest
        if: ${{ matrix.arch != 'aarch64' }}
        run: |
          ctest -C Debug -V
        working-directory: ./build

      - name: Archive libs unittest reports
        if: ${{ matrix.arch != 'aarch64' }}
        uses: actions/upload-artifact@v3
        with:
          name: unit_test_result-${{ matrix.target }}-${{ matrix.arch }}
          path: build/*_test_report.xml
          retention-days: 1
          if-no-files-found: error

  test-results-preparation:
    name: "Publish Tests Results"
    needs: [ test_libs ]
    runs-on: ubuntu-22.04
    steps:
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Download unit test report windows
        uses: actions/download-artifact@v3
        with:
          name: unit_test_result-windows64-amd64
          path: testreports/

      - name: Download unit test report linux amd64
        uses: actions/download-artifact@v3
        with:
          name: unit_test_result-linux64-amd64
          path: testreports/

      - name: Download unit test report macos
        if: ${{ !github.event.repository.private }}
        uses: actions/download-artifact@v3
        with:
          name: unit_test_result-darwin64-amd64
          path: testreports/

      - name: Event File
        uses: actions/upload-artifact@v3
        with:
          name: Event File
          path: ${{ github.event_path }}
