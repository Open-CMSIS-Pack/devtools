name: toolbox
on:
  push:
    branches:
      - main
  release:
    types: [published]

jobs:

  release:
    if: ${{ github.event_name == 'release' && startsWith(github.ref, 'refs/tags/tools/toolbox/') }}
    runs-on: ubuntu-20.04
    timeout-minutes: 15

    steps:
      - name: Checkout devtools
        uses: actions/checkout@v2

      - name: Create folders
        run: |
          mkdir -p tools/toolbox/cbuild
          mkdir -p tools/toolbox/projmgr
          mkdir -p tools/toolbox/distribution/bin
          mkdir -p tools/toolbox/distribution/etc
          mkdir -p tools/toolbox/distribution/doc/cbuild
          mkdir -p tools/toolbox/distribution/doc/cpackget
          mkdir -p tools/toolbox/distribution/doc/projmgr

      - name: Download cbuild release asset
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          version: tags/tools/buildmgr/0.10.4
          file: cbuild_install.sh
          target: tools/toolbox/cbuild/cbuild_install.sh
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download projmgr release asset
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          version: tags/tools/projmgr/0.9.0
          file: projmgr.zip
          target: tools/toolbox/projmgr/projmgr.zip
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Unzip and copy files
        run: |
          sudo chmod +x ./cbuild/cbuild_install.sh
          ./cbuild/cbuild_install.sh -x cbuild
          unzip projmgr/projmgr.zip -d projmgr
          cp -r cbuild/bin/* distribution/bin
          cp -r cbuild/etc/* distribution/etc
          cp -r cbuild/doc/* distribution/doc/cbuild
          cp projmgr/bin/darwin64/projmgr distribution/bin/projmgr.mac
          cp projmgr/bin/linux64/projmgr distribution/bin/projmgr.lin
          cp projmgr/bin/windows64/projmgr.exe distribution/bin/projmgr.exe
          cp -r projmgr/etc/* distribution/etc
          cp -r projmgr/doc/* distribution/doc/projmgr
        working-directory: tools/toolbox

      - name: Create installer
        id: installer
        run: |
          export VERSION=$(echo ${{ github.ref }} | cut -d/ -f5)
          echo "::set-output name=VERSION::$VERSION"
          ./create_installer.sh --input=../distribution --output=. --version=$VERSION
        working-directory: tools/toolbox/installer

      - name: Attach installer to release assets
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: tools/toolbox/installer/cmsis-toolbox_${{ steps.installer.outputs.VERSION }}.sh
          tag: ${{ github.ref }}
          overwrite: true
          asset_name: cmsis-toolbox_${{ steps.installer.outputs.VERSION }}.sh
