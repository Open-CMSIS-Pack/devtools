name: packgen
on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/packgen.yml'
      - '.github/matrix_includes_packgen.json'
      - 'CMakeLists.txt'
      - 'libs/crossplatform/**'
      - 'libs/rtefsutils/**'
      - 'libs/xmlreader/**'
      - 'libs/xmltree/**'
      - 'libs/xmltreeslim/**'
      - 'tools/packgen/**'
  pull_request:
    paths:
      - '.github/workflows/packgen.yml'
      - '.github/matrix_includes_packgen.json'
      - 'CMakeLists.txt'
      - 'libs/crossplatform/**'
      - 'libs/rtefsutils/**'
      - 'libs/xmlreader/**'
      - 'libs/xmltree/**'
      - 'libs/xmltreeslim/**'
      - 'tools/packgen/**'
  release:
    types: [published]

jobs:
  matrix_prep:
    if: |
        (github.event_name == 'pull_request') ||
        (github.event_name == 'release' && startsWith(github.ref, 'refs/tags/tools/packgen/'))
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - name: Check out repo
      uses: actions/checkout@v2
    - id: set-matrix
      run: |
        publicRepo=$(echo '${{ github.event.repository.private && 'privateRepo' || 'publicRepo' }}')
        matrix=$(jq --arg publicRepo "$publicRepo" 'map(. | select((.runOn==$publicRepo) or (.runOn=="always")) )' matrix_includes_packgen.json)
        echo ::set-output name=matrix::{\"include\":$(echo $matrix)}\"
      working-directory: .github/

  build:
    needs: matrix_prep
    runs-on: ${{ matrix.runs_on }}
    timeout-minutes: 15
    strategy:
      fail-fast: true
      matrix: ${{ fromJson(needs.matrix_prep.outputs.matrix) }}
    steps:
      - name: Checkout devtools
        uses: actions/checkout@v2
        with:
          submodules: true

      # https://github.com/Open-CMSIS-Pack/devtools-build-action
      - name: Build
        uses: Open-CMSIS-Pack/devtools-build-action@v1.1
        id: devtools-build
        with:
          target: packgen
          arch: ${{ matrix.arch }}

      - name: Archive packgen
        uses: actions/upload-artifact@v2
        with:
          name: packgen-${{ matrix.target }}-${{ matrix.arch }}
          path: ./build/tools/packgen/${{ matrix.target }}/Release/${{ matrix.binary }}
          retention-days: 1
          if-no-files-found: error

  release:
    if: |
        github.event_name == 'release' &&
        startsWith(github.ref, 'refs/tags/tools/packgen/')
    needs: [ build, unittest ]
    runs-on: ubuntu-20.04
    timeout-minutes: 15

    steps:
      - name: Checkout devtools
        uses: actions/checkout@v2

      - name: Create distribution folders
        run: |
          mkdir -p tools/packgen/distribution/bin tools/packgen/distribution/doc/examples
          cp tools/packgen/docs/LICENSE.txt tools/packgen/distribution/
          cp tools/packgen/docs/README.md tools/packgen/distribution/doc/
          cp -r tools/packgen/test/data/CMakeTestProject/ tools/packgen/distribution/doc/examples/
          cp -r tools/packgen/test/data/CMakeTestMultipleBuilds/ tools/packgen/distribution/doc/examples/

      - name: Download packgen linux amd64
        uses: actions/download-artifact@v2
        with:
          name: packgen-linux64-amd64
          path: tools/packgen/distribution/bin/linux64/

      - name: Download packgen macos amd64
        uses: actions/download-artifact@v2
        with:
          name: packgen-darwin64-amd64
          path: tools/packgen/distribution/bin/darwin64/

      - name: Download packgen windows amd64
        uses: actions/download-artifact@v2
        with:
          name: packgen-windows64-amd64
          path: tools/packgen/distribution/bin/windows64/

      - name: Zip distribution folder
        run: zip -r packgen.zip *
        working-directory: tools/packgen/distribution

      - name: Attach zip archive to release assets
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: tools/packgen/distribution/packgen.zip
          tag: ${{ github.ref }}
          overwrite: true
          asset_name: packgen.zip

  unittest:
    needs: matrix_prep
    runs-on: ${{ matrix.runs_on }}
    timeout-minutes: 15
    strategy:
      fail-fast: true
      matrix: ${{ fromJson(needs.matrix_prep.outputs.matrix) }}
    steps:
      - name: Checkout devtools
        uses: actions/checkout@v2
        with:
          submodules: true

      # https://github.com/Open-CMSIS-Pack/devtools-build-action
      - name: Build PackGenUnitTests
        uses: Open-CMSIS-Pack/devtools-build-action@v1.1
        with:
          target: PackGenUnitTests
          build_type: Debug
          arch: ${{ matrix.arch }}

      - name: Run packgen unit tests
        run: |
          ctest -C Debug -R PackGenUnitTests
        working-directory: ./build

      - name: Archive unit tests results
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: unittest-${{ matrix.target }}-${{ matrix.arch }}
          path: ./build/packgenunit_test_report.xml
          retention-days: 1
          if-no-files-found: error

      - name: Publish packgen unit test results
        uses: mikepenz/action-junit-report@v2
        with:
          check_name: "Packgen unit tests [${{ matrix.target }}-${{ matrix.arch }}]"
          report_paths: build/packgenunit_test_report.xml
