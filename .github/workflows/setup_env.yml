name: setup_env

on:
  workflow_call:
    inputs:
      workflow_name:
        required: true
        type: string
    outputs:
      nightly:
        value: ${{ jobs.config_check.outputs.nightly }}
      retention_days:
        value: ${{ jobs.config_check.outputs.retention_days }}
      matrix:
        value: ${{ jobs.matrix_prep.outputs.matrix }}

jobs:
  config_check:
    runs-on: ubuntu-22.04
    outputs:
      nightly: ${{ steps.config.outputs.nightly }}
      retention_days: ${{ steps.config.outputs.retention_days }}
    steps:
      - name: Check Nightly/Scheduled
        id: config
        run: |
          echo "nightly=$(echo '${{ (github.event.schedule && (!github.event.repository.private)) && 'true' || 'false' }}')" >> $GITHUB_OUTPUT
          echo "retention_days=$(echo '${{ (github.event.schedule && (!github.event.repository.private)) && '7' || '1' }}')" >> $GITHUB_OUTPUT

  matrix_prep:
    runs-on: ubuntu-22.04
    if: |
        (github.event_name == 'pull_request') ||
        (github.event_name == 'release' && startsWith(github.ref, 'refs/tags/tools/${{ inputs.workflow_name }}/')) ||
        ${{ github.event.schedule && (!github.event.repository.private) }}
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
      - id: set-matrix
        run: |
          publicRepo=$(echo '${{ github.event.repository.private && 'privateRepo' || 'publicRepo' }}')
          matrix=$(jq --arg publicRepo "$publicRepo" 'map(. | select((.runOn==$publicRepo) or (.runOn=="always")) )' matrix_includes_${{ inputs.workflow_name }}.json)
          echo "matrix={\"include\":$(echo $matrix)}\"" >> $GITHUB_OUTPUT
        working-directory: .github/
